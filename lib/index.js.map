{"version":3,"file":"index.js","sources":["../src/utils/object-utils.js","../src/processors/metadata-extractor.js","../src/generators/meta-generator.js","../src/generators/opengraph-generator.js","../src/generators/twitter-generator.js","../src/generators/jsonld-generator.js","../src/utils/html-injector.js","../src/processors/head-optimizer.js","../src/processors/url-builder.js","../src/processors/auto-calculator.js","../src/processors/sitemap.js","../src/processors/robots.js","../src/index.js"],"sourcesContent":["/**\n * @fileoverview Utility functions for object manipulation.\n */\n\n/**\n * Safely gets a nested property value from an object using dot notation.\n * @param {Object} obj - The object to query\n * @param {string} pathStr - The property path (e.g., 'a.b.c')\n * @param {*} [defaultValue] - Value to return if the property is undefined\n * @returns {*} The property value or defaultValue\n */\nexport const get = (obj, pathStr, defaultValue) => {\n  if (!obj || !pathStr || typeof pathStr !== \"string\") {\n    return defaultValue;\n  }\n  const keys = pathStr.split(\".\");\n  let result = obj;\n  for (const key of keys) {\n    result = result?.[key];\n    if (result === undefined) {\n      return defaultValue;\n    }\n  }\n  return result;\n};\n\n/**\n * Creates a new object with only the properties that pass the predicate test.\n * @param {Object} obj - The source object\n * @param {function(*): boolean} predicate - Function to test each property value\n * @returns {Object} New object with filtered properties\n */\nexport const pick = (obj, predicate) => {\n  const result = {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (predicate(value)) {\n      result[key] = value;\n    }\n  }\n  return result;\n};\n\n/**\n * Identity function that returns the input value unchanged.\n * @param {*} value - Any value\n * @returns {*} The same value\n */\nexport const identity = (value) => value;","/**\n * @fileoverview Unified metadata extractor that processes frontmatter for SEO optimization.\n */\n\nimport { get } from \"../utils/object-utils.js\";\n\n/**\n * @typedef {Object} ExtractedMetadata\n * @property {string} title - Page title\n * @property {string} description - Page description\n * @property {string} [image] - Social sharing image URL\n * @property {string} [canonicalURL] - Canonical URL\n * @property {string} [robots] - Robots directive\n * @property {boolean} [noIndex] - Whether page should be excluded from indexing\n * @property {string} [type] - Content type (article, page, product, etc.)\n * @property {Date|string} [publishDate] - Publication date\n * @property {Date|string} [modifiedDate] - Last modified date\n * @property {string} [author] - Author name\n * @property {string[]} [keywords] - Keywords/tags\n * @property {number} [wordCount] - Word count from content\n * @property {string} [readingTime] - Estimated reading time\n */\n\n/**\n * @typedef {Object} MetadataOptions\n * @property {string} hostname - Base hostname for generating URLs\n * @property {string} [seoProperty='seo'] - Frontmatter property containing SEO data\n * @property {Object} [defaults] - Default values for missing metadata\n * @property {Object} [fallbacks] - Fallback property mappings\n */\n\n/**\n * Extracts and normalizes metadata from file frontmatter\n * @param {string} filePath - File path relative to source\n * @param {Object} frontmatter - File frontmatter and content\n * @param {MetadataOptions} options - Extraction options\n * @returns {ExtractedMetadata} Extracted and normalized metadata\n */\nexport function extractMetadata(filePath, frontmatter, options) {\n  const {\n    hostname,\n    seoProperty = 'seo',\n    defaults = {},\n    fallbacks = {}\n  } = options;\n  \n  // Ensure hostname is a string\n  const hostnameStr = String(hostname || '');\n\n  // Get SEO-specific metadata (highest priority)\n  const seoData = get(frontmatter, seoProperty) || {};\n\n  // Extract metadata with fallback chain: seo -> defaults -> fallbacks -> auto-generated\n  const metadata = {\n    // Core SEO properties\n    title: extractTitle(seoData, frontmatter, defaults, fallbacks),\n    description: extractDescription(seoData, frontmatter, defaults, fallbacks),\n    image: extractImage(seoData, frontmatter, defaults, fallbacks, hostnameStr),\n    canonicalURL: extractCanonicalURL(seoData, filePath, hostnameStr),\n    robots: extractRobots(seoData, defaults),\n    noIndex: extractNoIndex(seoData),\n    type: extractContentType(seoData, frontmatter),\n    \n    // Dates\n    publishDate: extractPublishDate(seoData, frontmatter, fallbacks),\n    modifiedDate: extractModifiedDate(seoData, frontmatter, fallbacks),\n    \n    // Author and content metadata\n    author: extractAuthor(seoData, frontmatter, fallbacks),\n    keywords: extractKeywords(seoData, frontmatter, fallbacks),\n    \n    // Content analysis\n    wordCount: extractWordCount(frontmatter),\n    readingTime: null, // Will be calculated after word count\n  };\n\n  // Calculate reading time\n  if (metadata.wordCount) {\n    metadata.readingTime = calculateReadingTime(metadata.wordCount);\n  }\n\n  return metadata;\n}\n\n/**\n * Extract title with fallback chain\n */\nfunction extractTitle(seoData, frontmatter, defaults, fallbacks) {\n  return seoData.title || \n         defaults.title || \n         get(frontmatter, fallbacks.title || 'title') || \n         'Untitled';\n}\n\n/**\n * Extract description with fallback chain\n */\nfunction extractDescription(seoData, frontmatter, defaults, fallbacks) {\n  return seoData.description || \n         defaults.description || \n         get(frontmatter, fallbacks.description || 'excerpt') ||\n         autoGenerateDescription(frontmatter.contents);\n}\n\n/**\n * Extract image with fallback chain\n */\nfunction extractImage(seoData, frontmatter, defaults, fallbacks, hostname) {\n  const image = seoData.image || \n                seoData.socialImage ||\n                defaults.socialImage || \n                get(frontmatter, fallbacks.image || 'featured_image');\n  \n  // Convert relative URLs to absolute\n  if (image && !image.startsWith('http')) {\n    return `${hostname.replace(/\\/$/, '')}${image.startsWith('/') ? '' : '/'}${image}`;\n  }\n  \n  return image;\n}\n\n/**\n * Extract canonical URL\n */\nfunction extractCanonicalURL(seoData, filePath, hostname) {\n  if (seoData.canonicalURL) {\n    return seoData.canonicalURL;\n  }\n  \n  // Auto-generate from file path\n  const cleanPath = filePath\n    .replace(/\\.html?$/, '')\n    .replace(/\\/index$/, '');\n  \n  return `${hostname.replace(/\\/$/, '')}/${cleanPath}`.replace(/\\/+/g, '/');\n}\n\n/**\n * Extract robots directive\n */\nfunction extractRobots(seoData, defaults) {\n  return seoData.robots || defaults.robots || 'index,follow';\n}\n\n/**\n * Extract noIndex flag\n */\nfunction extractNoIndex(seoData) {\n  return Boolean(seoData.noIndex);\n}\n\n/**\n * Auto-detect content type\n */\nfunction extractContentType(seoData, frontmatter) {\n  if (seoData.type) {\n    return seoData.type;\n  }\n  \n  // Auto-detect based on frontmatter properties\n  if (frontmatter.date && (frontmatter.author || frontmatter.tags)) {\n    return 'article';\n  }\n  \n  if (frontmatter.price || frontmatter.sku) {\n    return 'product';\n  }\n  \n  if (frontmatter.address || frontmatter.phone) {\n    return 'local-business';\n  }\n  \n  return 'page';\n}\n\n/**\n * Extract publish date\n */\nfunction extractPublishDate(seoData, frontmatter, fallbacks) {\n  const date = get(seoData, 'publishDate') || \n               get(frontmatter, fallbacks.publishDate || 'date');\n  \n  return normalizeDate(date);\n}\n\n/**\n * Extract modified date\n */\nfunction extractModifiedDate(seoData, frontmatter, fallbacks) {\n  const date = get(seoData, 'modifiedDate') || \n               get(frontmatter, fallbacks.modifiedDate || 'updated');\n  \n  return normalizeDate(date);\n}\n\n/**\n * Extract author information\n */\nfunction extractAuthor(seoData, frontmatter, fallbacks) {\n  return get(seoData, 'author') || \n         get(frontmatter, fallbacks.author || 'author.name') ||\n         get(frontmatter, 'author');\n}\n\n/**\n * Extract keywords/tags\n */\nfunction extractKeywords(seoData, frontmatter, fallbacks) {\n  const keywords = get(seoData, 'keywords') || \n                   get(frontmatter, fallbacks.keywords || 'tags') ||\n                   get(frontmatter, 'keywords');\n  \n  if (Array.isArray(keywords)) {\n    return keywords;\n  }\n  \n  if (typeof keywords === 'string') {\n    return keywords.split(',').map(k => k.trim());\n  }\n  \n  return [];\n}\n\n/**\n * Extract word count from content\n */\nfunction extractWordCount(frontmatter) {\n  if (!Buffer.isBuffer(frontmatter.contents)) {\n    return 0;\n  }\n  \n  const content = frontmatter.contents.toString();\n  const words = content\n    .replace(/<[^>]*>/g, '') // Remove HTML tags\n    .replace(/\\s+/g, ' ')    // Normalize whitespace\n    .trim()\n    .split(' ')\n    .filter(word => word.length > 0);\n  \n  return words.length;\n}\n\n/**\n * Calculate reading time from word count\n */\nfunction calculateReadingTime(wordCount) {\n  const wordsPerMinute = 200;\n  const minutes = Math.ceil(wordCount / wordsPerMinute);\n  return `${minutes} min read`;\n}\n\n/**\n * Auto-generate description from content\n */\nfunction autoGenerateDescription(contents, maxLength = 160) {\n  if (!Buffer.isBuffer(contents)) {\n    return '';\n  }\n  \n  const content = contents.toString()\n    .replace(/<[^>]*>/g, '')     // Remove HTML tags\n    .replace(/\\s+/g, ' ')        // Normalize whitespace\n    .trim();\n  \n  if (content.length <= maxLength) {\n    return content;\n  }\n  \n  // Find the last complete sentence within the limit\n  const truncated = content.substring(0, maxLength);\n  const lastSentence = truncated.lastIndexOf('.');\n  const lastSpace = truncated.lastIndexOf(' ');\n  \n  if (lastSentence > maxLength * 0.6) {\n    return content.substring(0, lastSentence + 1);\n  }\n  \n  if (lastSpace > maxLength * 0.8) {\n    return content.substring(0, lastSpace) + '...';\n  }\n  \n  return truncated + '...';\n}\n\n/**\n * Normalize date to ISO string\n */\nfunction normalizeDate(date) {\n  if (!date) {\n    return null;\n  }\n  \n  if (date instanceof Date) {\n    return date.toISOString();\n  }\n  \n  if (typeof date === 'string') {\n    const parsed = new Date(date);\n    if (!isNaN(parsed.getTime())) {\n      return parsed.toISOString();\n    }\n  }\n  \n  return null;\n}","/**\n * @fileoverview Generator for basic HTML meta tags.\n */\n\n/**\n * @typedef {Object} MetaTagsResult\n * @property {string} title - Title tag content\n * @property {Array<Object>} metaTags - Array of meta tag objects\n * @property {Array<Object>} linkTags - Array of link tag objects\n */\n\n/**\n * Generates basic HTML meta tags from extracted metadata\n * @param {Object} metadata - Extracted metadata object\n * @param {Object} siteConfig - Site-wide configuration\n * @returns {MetaTagsResult} Generated meta tags\n */\nexport function generateMetaTags(metadata, siteConfig = {}) {\n  const metaTags = [];\n  const linkTags = [];\n\n  // Basic meta tags\n  if (metadata.description) {\n    metaTags.push({\n      name: 'description',\n      content: metadata.description\n    });\n  }\n\n  if (metadata.keywords && metadata.keywords.length > 0) {\n    metaTags.push({\n      name: 'keywords',\n      content: Array.isArray(metadata.keywords) \n        ? metadata.keywords.join(', ')\n        : metadata.keywords\n    });\n  }\n\n  // Robots directive\n  const robots = generateRobotsDirective(metadata, siteConfig);\n  if (robots) {\n    metaTags.push({\n      name: 'robots',\n      content: robots\n    });\n  }\n\n  // Author\n  if (metadata.author) {\n    metaTags.push({\n      name: 'author',\n      content: metadata.author\n    });\n  }\n\n  // Viewport (always include for mobile optimization)\n  metaTags.push({\n    name: 'viewport',\n    content: 'width=device-width, initial-scale=1.0'\n  });\n\n  // Canonical URL\n  if (metadata.canonicalURL) {\n    linkTags.push({\n      rel: 'canonical',\n      href: metadata.canonicalURL\n    });\n  }\n\n  // Theme color (if specified in site config)\n  if (siteConfig.themeColor) {\n    metaTags.push({\n      name: 'theme-color',\n      content: siteConfig.themeColor\n    });\n  }\n\n  // Additional technical meta tags\n  addTechnicalMetaTags(metaTags, metadata, siteConfig);\n\n  return {\n    title: metadata.title,\n    metaTags,\n    linkTags\n  };\n}\n\n/**\n * Generates robots directive based on metadata and configuration\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n * @returns {string|null} Robots directive string\n */\nfunction generateRobotsDirective(metadata, siteConfig) {\n  if (metadata.noIndex) {\n    return 'noindex,nofollow';\n  }\n\n  if (metadata.robots) {\n    return metadata.robots;\n  }\n\n  // Default based on content type\n  switch (metadata.type) {\n    case 'article':\n      return 'index,follow';\n    case 'page':\n      return 'index,follow';\n    case 'product':\n      return 'index,follow';\n    default:\n      return siteConfig.defaultRobots || 'index,follow';\n  }\n}\n\n/**\n * Adds technical meta tags for advanced SEO\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n */\nfunction addTechnicalMetaTags(metaTags, metadata, siteConfig) {\n  // Content language\n  if (siteConfig.language) {\n    metaTags.push({\n      httpEquiv: 'content-language',\n      content: siteConfig.language\n    });\n  }\n\n  // Publisher\n  if (siteConfig.publisher) {\n    metaTags.push({\n      name: 'publisher',\n      content: siteConfig.publisher\n    });\n  }\n\n  // Copyright\n  if (siteConfig.copyright) {\n    metaTags.push({\n      name: 'copyright',\n      content: siteConfig.copyright\n    });\n  }\n\n  // Googlebot specific directives\n  const googlebotDirectives = [];\n  \n  if (siteConfig.maxSnippet) {\n    googlebotDirectives.push(`max-snippet:${siteConfig.maxSnippet}`);\n  }\n  \n  if (siteConfig.maxImagePreview) {\n    googlebotDirectives.push(`max-image-preview:${siteConfig.maxImagePreview}`);\n  }\n  \n  if (siteConfig.maxVideoPreview) {\n    googlebotDirectives.push(`max-video-preview:${siteConfig.maxVideoPreview}`);\n  }\n\n  if (googlebotDirectives.length > 0) {\n    metaTags.push({\n      name: 'googlebot',\n      content: googlebotDirectives.join(',')\n    });\n  }\n\n  // Article-specific meta tags\n  if (metadata.type === 'article') {\n    addArticleMetaTags(metaTags, metadata);\n  }\n}\n\n/**\n * Adds article-specific meta tags\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n */\nfunction addArticleMetaTags(metaTags, metadata) {\n  if (metadata.publishDate) {\n    const date = new Date(metadata.publishDate);\n    metaTags.push({\n      name: 'article:published_time',\n      content: date.toISOString()\n    });\n  }\n\n  if (metadata.modifiedDate) {\n    const date = new Date(metadata.modifiedDate);\n    metaTags.push({\n      name: 'article:modified_time',\n      content: date.toISOString()\n    });\n  }\n\n  if (metadata.author) {\n    metaTags.push({\n      name: 'article:author',\n      content: metadata.author\n    });\n  }\n\n  if (metadata.keywords && metadata.keywords.length > 0) {\n    metadata.keywords.forEach(keyword => {\n      metaTags.push({\n        name: 'article:tag',\n        content: keyword\n      });\n    });\n  }\n}\n\n/**\n * Converts meta tags array to HTML string\n * @param {Array} metaTags - Array of meta tag objects\n * @returns {string} HTML meta tags\n */\nexport function metaTagsToHtml(metaTags) {\n  return metaTags.map(tag => {\n    const attributes = [];\n    \n    if (tag.name) attributes.push(`name=\"${escapeHtml(tag.name)}\"`);\n    if (tag.property) attributes.push(`property=\"${escapeHtml(tag.property)}\"`);\n    if (tag.httpEquiv) attributes.push(`http-equiv=\"${escapeHtml(tag.httpEquiv)}\"`);\n    if (tag.content) attributes.push(`content=\"${escapeHtml(tag.content)}\"`);\n    \n    return `<meta ${attributes.join(' ')}>`;\n  }).join('\\n');\n}\n\n/**\n * Converts link tags array to HTML string\n * @param {Array} linkTags - Array of link tag objects\n * @returns {string} HTML link tags\n */\nexport function linkTagsToHtml(linkTags) {\n  return linkTags.map(tag => {\n    const attributes = [];\n    \n    if (tag.rel) attributes.push(`rel=\"${escapeHtml(tag.rel)}\"`);\n    if (tag.href) attributes.push(`href=\"${escapeHtml(tag.href)}\"`);\n    if (tag.type) attributes.push(`type=\"${escapeHtml(tag.type)}\"`);\n    if (tag.sizes) attributes.push(`sizes=\"${escapeHtml(tag.sizes)}\"`);\n    \n    // Add any other attributes\n    Object.entries(tag).forEach(([key, value]) => {\n      if (!['rel', 'href', 'type', 'sizes'].includes(key)) {\n        attributes.push(`${key}=\"${escapeHtml(value)}\"`);\n      }\n    });\n    \n    return `<link ${attributes.join(' ')}>`;\n  }).join('\\n');\n}\n\n/**\n * Escapes HTML special characters\n * @param {string} str - String to escape\n * @returns {string} Escaped string\n */\nfunction escapeHtml(str) {\n  if (typeof str !== 'string') {\n    return String(str);\n  }\n  \n  return str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}","/**\n * @fileoverview Generator for Open Graph meta tags.\n */\n\n/**\n * @typedef {Object} OpenGraphResult\n * @property {Array<Object>} metaTags - Array of Open Graph meta tag objects\n */\n\n/**\n * Generates Open Graph meta tags from extracted metadata\n * @param {Object} metadata - Extracted metadata object\n * @param {Object} siteConfig - Site-wide configuration\n * @returns {OpenGraphResult} Generated Open Graph tags\n */\nexport function generateOpenGraphTags(metadata, siteConfig = {}) {\n  const metaTags = [];\n\n  // Core Open Graph tags\n  addCoreOpenGraphTags(metaTags, metadata, siteConfig);\n  \n  // Type-specific tags\n  switch (metadata.type) {\n    case 'article':\n      addArticleOpenGraphTags(metaTags, metadata);\n      break;\n    case 'product':\n      addProductOpenGraphTags(metaTags, metadata);\n      break;\n    case 'profile':\n      addProfileOpenGraphTags(metaTags, metadata);\n      break;\n    default:\n      // 'website' type is default, no additional tags needed\n      break;\n  }\n\n  // Site-specific tags\n  addSiteOpenGraphTags(metaTags, siteConfig);\n\n  return { metaTags };\n}\n\n/**\n * Adds core Open Graph tags (required for all content)\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n */\nfunction addCoreOpenGraphTags(metaTags, metadata, siteConfig) {\n  // og:title (required)\n  if (metadata.title) {\n    metaTags.push({\n      property: 'og:title',\n      content: metadata.title\n    });\n  }\n\n  // og:type (required)\n  const ogType = mapContentTypeToOGType(metadata.type);\n  metaTags.push({\n    property: 'og:type',\n    content: ogType\n  });\n\n  // og:url (required)\n  if (metadata.canonicalURL) {\n    metaTags.push({\n      property: 'og:url',\n      content: metadata.canonicalURL\n    });\n  }\n\n  // og:description\n  if (metadata.description) {\n    metaTags.push({\n      property: 'og:description',\n      content: metadata.description\n    });\n  }\n\n  // og:image (recommended)\n  if (metadata.image) {\n    metaTags.push({\n      property: 'og:image',\n      content: metadata.image\n    });\n\n    // Add image metadata if available\n    addImageMetadata(metaTags, metadata, siteConfig);\n  }\n\n  // og:site_name\n  if (siteConfig.siteName) {\n    metaTags.push({\n      property: 'og:site_name',\n      content: siteConfig.siteName\n    });\n  }\n\n  // og:locale\n  const locale = siteConfig.locale || siteConfig.language || 'en_US';\n  metaTags.push({\n    property: 'og:locale',\n    content: locale\n  });\n}\n\n/**\n * Adds image metadata for Open Graph\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n */\nfunction addImageMetadata(metaTags, metadata, siteConfig) {\n  // Default image dimensions for social sharing\n  const defaultWidth = siteConfig.ogImageWidth || 1200;\n  const defaultHeight = siteConfig.ogImageHeight || 630;\n  \n  metaTags.push({\n    property: 'og:image:width',\n    content: String(defaultWidth)\n  });\n  \n  metaTags.push({\n    property: 'og:image:height',\n    content: String(defaultHeight)\n  });\n\n  // Image alt text (accessibility)\n  const imageAlt = metadata.imageAlt || metadata.title || 'Image';\n  metaTags.push({\n    property: 'og:image:alt',\n    content: imageAlt\n  });\n\n  // Image type (if known)\n  if (metadata.image) {\n    const imageType = getImageType(metadata.image);\n    if (imageType) {\n      metaTags.push({\n        property: 'og:image:type',\n        content: imageType\n      });\n    }\n  }\n}\n\n/**\n * Adds article-specific Open Graph tags\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n */\nfunction addArticleOpenGraphTags(metaTags, metadata) {\n  // article:published_time\n  if (metadata.publishDate) {\n    metaTags.push({\n      property: 'article:published_time',\n      content: new Date(metadata.publishDate).toISOString()\n    });\n  }\n\n  // article:modified_time\n  if (metadata.modifiedDate) {\n    metaTags.push({\n      property: 'article:modified_time',\n      content: new Date(metadata.modifiedDate).toISOString()\n    });\n  }\n\n  // article:author\n  if (metadata.author) {\n    metaTags.push({\n      property: 'article:author',\n      content: metadata.author\n    });\n  }\n\n  // article:section\n  if (metadata.section) {\n    metaTags.push({\n      property: 'article:section',\n      content: metadata.section\n    });\n  }\n\n  // article:tag (multiple tags)\n  if (metadata.keywords && metadata.keywords.length > 0) {\n    metadata.keywords.forEach(tag => {\n      metaTags.push({\n        property: 'article:tag',\n        content: tag\n      });\n    });\n  }\n\n  // Reading time (custom property)\n  if (metadata.readingTime) {\n    metaTags.push({\n      property: 'article:reading_time',\n      content: metadata.readingTime\n    });\n  }\n}\n\n/**\n * Adds product-specific Open Graph tags\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n */\nfunction addProductOpenGraphTags(metaTags, metadata) {\n  // product:brand\n  if (metadata.brand) {\n    metaTags.push({\n      property: 'product:brand',\n      content: metadata.brand\n    });\n  }\n\n  // product:availability\n  if (metadata.availability) {\n    metaTags.push({\n      property: 'product:availability',\n      content: metadata.availability\n    });\n  }\n\n  // product:condition\n  if (metadata.condition) {\n    metaTags.push({\n      property: 'product:condition',\n      content: metadata.condition\n    });\n  }\n\n  // product:price\n  if (metadata.price) {\n    metaTags.push({\n      property: 'product:price:amount',\n      content: String(metadata.price)\n    });\n  }\n\n  // product:price:currency\n  if (metadata.currency) {\n    metaTags.push({\n      property: 'product:price:currency',\n      content: metadata.currency\n    });\n  }\n}\n\n/**\n * Adds profile-specific Open Graph tags\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n */\nfunction addProfileOpenGraphTags(metaTags, metadata) {\n  // profile:first_name\n  if (metadata.firstName) {\n    metaTags.push({\n      property: 'profile:first_name',\n      content: metadata.firstName\n    });\n  }\n\n  // profile:last_name\n  if (metadata.lastName) {\n    metaTags.push({\n      property: 'profile:last_name',\n      content: metadata.lastName\n    });\n  }\n\n  // profile:username\n  if (metadata.username) {\n    metaTags.push({\n      property: 'profile:username',\n      content: metadata.username\n    });\n  }\n}\n\n/**\n * Adds site-specific Open Graph tags\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} siteConfig - Site configuration\n */\nfunction addSiteOpenGraphTags(metaTags, siteConfig) {\n  // Facebook App ID\n  if (siteConfig.facebookAppId) {\n    metaTags.push({\n      property: 'fb:app_id',\n      content: siteConfig.facebookAppId\n    });\n  }\n\n  // Facebook Admins\n  if (siteConfig.facebookAdmins) {\n    const admins = Array.isArray(siteConfig.facebookAdmins) \n      ? siteConfig.facebookAdmins \n      : [siteConfig.facebookAdmins];\n    \n    admins.forEach(admin => {\n      metaTags.push({\n        property: 'fb:admins',\n        content: String(admin)\n      });\n    });\n  }\n}\n\n/**\n * Maps content types to Open Graph types\n * @param {string} contentType - Internal content type\n * @returns {string} Open Graph type\n */\nfunction mapContentTypeToOGType(contentType) {\n  const typeMap = {\n    'article': 'article',\n    'product': 'product',\n    'profile': 'profile',\n    'page': 'website',\n    'local-business': 'business.business'\n  };\n\n  return typeMap[contentType] || 'website';\n}\n\n/**\n * Determines image MIME type from file extension\n * @param {string} imageUrl - Image URL\n * @returns {string|null} MIME type\n */\nfunction getImageType(imageUrl) {\n  const extension = imageUrl.split('.').pop()?.toLowerCase();\n  \n  const typeMap = {\n    'jpg': 'image/jpeg',\n    'jpeg': 'image/jpeg',\n    'png': 'image/png',\n    'gif': 'image/gif',\n    'webp': 'image/webp',\n    'svg': 'image/svg+xml'\n  };\n\n  return typeMap[extension] || null;\n}\n\n/**\n * Converts Open Graph meta tags to HTML string\n * @param {Array} metaTags - Array of meta tag objects\n * @returns {string} HTML meta tags\n */\nexport function openGraphTagsToHtml(metaTags) {\n  return metaTags.map(tag => {\n    const property = escapeHtml(tag.property);\n    const content = escapeHtml(tag.content);\n    return `<meta property=\"${property}\" content=\"${content}\">`;\n  }).join('\\n');\n}\n\n/**\n * Escapes HTML special characters\n * @param {string} str - String to escape\n * @returns {string} Escaped string\n */\nfunction escapeHtml(str) {\n  if (typeof str !== 'string') {\n    return String(str);\n  }\n  \n  return str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}","/**\n * @fileoverview Generator for Twitter Card meta tags.\n */\n\n/**\n * @typedef {Object} TwitterCardResult\n * @property {Array<Object>} metaTags - Array of Twitter Card meta tag objects\n */\n\n/**\n * Generates Twitter Card meta tags from extracted metadata\n * @param {Object} metadata - Extracted metadata object\n * @param {Object} siteConfig - Site-wide configuration\n * @returns {TwitterCardResult} Generated Twitter Card tags\n */\nexport function generateTwitterCardTags(metadata, siteConfig = {}) {\n  const metaTags = [];\n\n  // Determine card type\n  const cardType = determineCardType(metadata, siteConfig);\n  \n  // Core Twitter Card tags\n  addCoreTwitterTags(metaTags, metadata, siteConfig, cardType);\n  \n  // Card type-specific tags\n  switch (cardType) {\n    case 'summary_large_image':\n      addSummaryLargeImageTags(metaTags, metadata);\n      break;\n    case 'summary':\n      addSummaryTags(metaTags, metadata);\n      break;\n    case 'app':\n      addAppTags(metaTags, metadata, siteConfig);\n      break;\n    case 'player':\n      addPlayerTags(metaTags, metadata);\n      break;\n    default:\n      // Default to summary\n      addSummaryTags(metaTags, metadata);\n      break;\n  }\n\n  return { metaTags };\n}\n\n/**\n * Determines the appropriate Twitter Card type\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n * @returns {string} Twitter Card type\n */\nfunction determineCardType(metadata, siteConfig) {\n  // Allow explicit override in site config or metadata\n  if (metadata.twitterCard) {\n    return metadata.twitterCard;\n  }\n  \n  if (siteConfig.twitterCardType) {\n    return siteConfig.twitterCardType;\n  }\n\n  // Auto-determine based on content\n  if (metadata.image) {\n    return 'summary_large_image';\n  }\n\n  if (metadata.type === 'video' || metadata.videoUrl) {\n    return 'player';\n  }\n\n  if (metadata.type === 'app' || metadata.appId) {\n    return 'app';\n  }\n\n  return 'summary';\n}\n\n/**\n * Adds core Twitter Card tags (common to all card types)\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n * @param {string} cardType - Twitter card type\n */\nfunction addCoreTwitterTags(metaTags, metadata, siteConfig, cardType) {\n  // twitter:card (required)\n  metaTags.push({\n    name: 'twitter:card',\n    content: cardType\n  });\n\n  // twitter:site (recommended)\n  if (siteConfig.twitterSite) {\n    metaTags.push({\n      name: 'twitter:site',\n      content: ensureTwitterHandle(siteConfig.twitterSite)\n    });\n  }\n\n  // twitter:creator (optional)\n  const creator = metadata.twitterCreator || \n                  metadata.author || \n                  siteConfig.twitterCreator;\n  if (creator) {\n    metaTags.push({\n      name: 'twitter:creator',\n      content: ensureTwitterHandle(creator)\n    });\n  }\n\n  // twitter:title (falls back to og:title)\n  if (metadata.title) {\n    // Twitter titles should be shorter than OG titles\n    const twitterTitle = truncateTitle(metadata.title, 70);\n    metaTags.push({\n      name: 'twitter:title',\n      content: twitterTitle\n    });\n  }\n\n  // twitter:description (falls back to og:description)\n  if (metadata.description) {\n    // Twitter descriptions should be shorter\n    const twitterDescription = truncateDescription(metadata.description, 200);\n    metaTags.push({\n      name: 'twitter:description',\n      content: twitterDescription\n    });\n  }\n}\n\n/**\n * Adds tags specific to summary_large_image cards\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n */\nfunction addSummaryLargeImageTags(metaTags, metadata) {\n  if (metadata.image) {\n    metaTags.push({\n      name: 'twitter:image',\n      content: metadata.image\n    });\n\n    // Image alt text (accessibility)\n    const imageAlt = metadata.imageAlt || metadata.title || 'Image';\n    metaTags.push({\n      name: 'twitter:image:alt',\n      content: imageAlt\n    });\n  }\n}\n\n/**\n * Adds tags specific to summary cards\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n */\nfunction addSummaryTags(metaTags, metadata) {\n  if (metadata.image) {\n    metaTags.push({\n      name: 'twitter:image',\n      content: metadata.image\n    });\n\n    // Image alt text (accessibility)\n    const imageAlt = metadata.imageAlt || metadata.title || 'Image';\n    metaTags.push({\n      name: 'twitter:image:alt',\n      content: imageAlt\n    });\n  }\n}\n\n/**\n * Adds tags specific to app cards\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n */\nfunction addAppTags(metaTags, metadata, siteConfig) {\n  // iOS app\n  if (metadata.iosAppId || siteConfig.iosAppId) {\n    metaTags.push({\n      name: 'twitter:app:id:iphone',\n      content: metadata.iosAppId || siteConfig.iosAppId\n    });\n  }\n\n  if (metadata.iosAppUrl || siteConfig.iosAppUrl) {\n    metaTags.push({\n      name: 'twitter:app:url:iphone',\n      content: metadata.iosAppUrl || siteConfig.iosAppUrl\n    });\n  }\n\n  // Android app\n  if (metadata.androidAppId || siteConfig.androidAppId) {\n    metaTags.push({\n      name: 'twitter:app:id:googleplay',\n      content: metadata.androidAppId || siteConfig.androidAppId\n    });\n  }\n\n  if (metadata.androidAppUrl || siteConfig.androidAppUrl) {\n    metaTags.push({\n      name: 'twitter:app:url:googleplay',\n      content: metadata.androidAppUrl || siteConfig.androidAppUrl\n    });\n  }\n\n  // App name\n  if (metadata.appName || siteConfig.appName) {\n    metaTags.push({\n      name: 'twitter:app:name:iphone',\n      content: metadata.appName || siteConfig.appName\n    });\n    metaTags.push({\n      name: 'twitter:app:name:googleplay',\n      content: metadata.appName || siteConfig.appName\n    });\n  }\n}\n\n/**\n * Adds tags specific to player cards\n * @param {Array} metaTags - Meta tags array to modify\n * @param {Object} metadata - Extracted metadata\n */\nfunction addPlayerTags(metaTags, metadata) {\n  if (metadata.videoUrl) {\n    metaTags.push({\n      name: 'twitter:player',\n      content: metadata.videoUrl\n    });\n  }\n\n  if (metadata.videoWidth) {\n    metaTags.push({\n      name: 'twitter:player:width',\n      content: String(metadata.videoWidth)\n    });\n  }\n\n  if (metadata.videoHeight) {\n    metaTags.push({\n      name: 'twitter:player:height',\n      content: String(metadata.videoHeight)\n    });\n  }\n\n  if (metadata.videoStreamUrl) {\n    metaTags.push({\n      name: 'twitter:player:stream',\n      content: metadata.videoStreamUrl\n    });\n  }\n\n  // Player image (thumbnail)\n  if (metadata.image) {\n    metaTags.push({\n      name: 'twitter:image',\n      content: metadata.image\n    });\n  }\n}\n\n/**\n * Ensures Twitter handle has @ prefix\n * @param {string} handle - Twitter handle\n * @returns {string} Formatted Twitter handle\n */\nfunction ensureTwitterHandle(handle) {\n  if (typeof handle !== 'string') {\n    return String(handle);\n  }\n  \n  const cleaned = handle.trim();\n  return cleaned.startsWith('@') ? cleaned : `@${cleaned}`;\n}\n\n/**\n * Truncates title to fit Twitter's recommendations\n * @param {string} title - Original title\n * @param {number} maxLength - Maximum length\n * @returns {string} Truncated title\n */\nfunction truncateTitle(title, maxLength = 70) {\n  if (title.length <= maxLength) {\n    return title;\n  }\n\n  // Find the last space before the limit\n  const truncated = title.substring(0, maxLength);\n  const lastSpace = truncated.lastIndexOf(' ');\n  \n  if (lastSpace > maxLength * 0.8) {\n    return title.substring(0, lastSpace) + '...';\n  }\n  \n  return truncated + '...';\n}\n\n/**\n * Truncates description to fit Twitter's recommendations\n * @param {string} description - Original description\n * @param {number} maxLength - Maximum length\n * @returns {string} Truncated description\n */\nfunction truncateDescription(description, maxLength = 200) {\n  if (description.length <= maxLength) {\n    return description;\n  }\n\n  // Find the last complete sentence within the limit\n  const truncated = description.substring(0, maxLength);\n  const lastSentence = truncated.lastIndexOf('.');\n  const lastSpace = truncated.lastIndexOf(' ');\n  \n  if (lastSentence > maxLength * 0.6) {\n    return description.substring(0, lastSentence + 1);\n  }\n  \n  if (lastSpace > maxLength * 0.8) {\n    return description.substring(0, lastSpace) + '...';\n  }\n  \n  return truncated + '...';\n}\n\n/**\n * Converts Twitter Card meta tags to HTML string\n * @param {Array} metaTags - Array of meta tag objects\n * @returns {string} HTML meta tags\n */\nexport function twitterCardTagsToHtml(metaTags) {\n  return metaTags.map(tag => {\n    const name = escapeHtml(tag.name);\n    const content = escapeHtml(tag.content);\n    return `<meta name=\"${name}\" content=\"${content}\">`;\n  }).join('\\n');\n}\n\n/**\n * Escapes HTML special characters\n * @param {string} str - String to escape\n * @returns {string} Escaped string\n */\nfunction escapeHtml(str) {\n  if (typeof str !== 'string') {\n    return String(str);\n  }\n  \n  return str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}","/**\n * @fileoverview Generator for JSON-LD structured data.\n */\n\n/**\n * @typedef {Object} JsonLdResult\n * @property {Array<Object>} schemas - Array of JSON-LD schema objects\n * @property {string} html - HTML script tag containing JSON-LD\n */\n\n/**\n * Generates JSON-LD structured data from extracted metadata\n * @param {Object} metadata - Extracted metadata object\n * @param {Object} siteConfig - Site-wide configuration\n * @param {string} filePath - File path for context\n * @returns {JsonLdResult} Generated JSON-LD schemas\n */\nexport function generateJsonLd(metadata, siteConfig = {}, filePath = '') {\n  const schemas = [];\n\n  // Generate schemas based on content type and configuration\n  generateWebSiteSchema(schemas, siteConfig);\n  generateContentSchema(schemas, metadata, siteConfig);\n  generateBreadcrumbSchema(schemas, filePath, siteConfig);\n  generateOrganizationSchema(schemas, siteConfig);\n\n  // Convert schemas to JSON-LD context\n  const jsonLdSchemas = schemas.map(schema => ({\n    \"@context\": \"https://schema.org\",\n    ...schema\n  }));\n\n  // Generate HTML script tag\n  const html = generateJsonLdHtml(jsonLdSchemas);\n\n  return {\n    schemas: jsonLdSchemas,\n    html\n  };\n}\n\n/**\n * Generates WebSite schema\n * @param {Array} schemas - Schemas array to modify\n * @param {Object} siteConfig - Site configuration\n */\nfunction generateWebSiteSchema(schemas, siteConfig) {\n  if (!siteConfig.name && !siteConfig.siteName) {\n    return;\n  }\n\n  const webSiteSchema = {\n    \"@type\": \"WebSite\",\n    \"name\": siteConfig.siteName || siteConfig.name,\n    \"url\": siteConfig.hostname || siteConfig.url\n  };\n\n  // Add search action if configured\n  if (siteConfig.searchUrl) {\n    webSiteSchema.potentialAction = {\n      \"@type\": \"SearchAction\",\n      \"target\": {\n        \"@type\": \"EntryPoint\",\n        \"urlTemplate\": `${siteConfig.searchUrl}?q={search_term_string}`\n      },\n      \"query-input\": \"required name=search_term_string\"\n    };\n  }\n\n  // Add alternate name\n  if (siteConfig.alternateNames) {\n    webSiteSchema.alternateName = Array.isArray(siteConfig.alternateNames) \n      ? siteConfig.alternateNames \n      : [siteConfig.alternateNames];\n  }\n\n  schemas.push(webSiteSchema);\n}\n\n/**\n * Generates content-specific schema based on type\n * @param {Array} schemas - Schemas array to modify\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n */\nfunction generateContentSchema(schemas, metadata, siteConfig) {\n  switch (metadata.type) {\n    case 'article':\n      generateArticleSchema(schemas, metadata, siteConfig);\n      break;\n    case 'product':\n      generateProductSchema(schemas, metadata, siteConfig);\n      break;\n    case 'local-business':\n      generateLocalBusinessSchema(schemas, metadata, siteConfig);\n      break;\n    case 'page':\n    default:\n      generateWebPageSchema(schemas, metadata, siteConfig);\n      break;\n  }\n}\n\n/**\n * Generates Article schema\n * @param {Array} schemas - Schemas array to modify\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n */\nfunction generateArticleSchema(schemas, metadata, siteConfig) {\n  const articleSchema = {\n    \"@type\": \"Article\",\n    \"headline\": metadata.title,\n    \"url\": metadata.canonicalURL\n  };\n\n  // Description\n  if (metadata.description) {\n    articleSchema.description = metadata.description;\n  }\n\n  // Image\n  if (metadata.image) {\n    articleSchema.image = {\n      \"@type\": \"ImageObject\",\n      \"url\": metadata.image\n    };\n  }\n\n  // Dates\n  if (metadata.publishDate) {\n    articleSchema.datePublished = new Date(metadata.publishDate).toISOString();\n  }\n  \n  if (metadata.modifiedDate) {\n    articleSchema.dateModified = new Date(metadata.modifiedDate).toISOString();\n  }\n\n  // Author\n  if (metadata.author) {\n    articleSchema.author = {\n      \"@type\": \"Person\",\n      \"name\": metadata.author\n    };\n  }\n\n  // Publisher (organization)\n  if (siteConfig.organization) {\n    articleSchema.publisher = generatePublisherSchema(siteConfig.organization);\n  }\n\n  // Article section\n  if (metadata.section) {\n    articleSchema.articleSection = metadata.section;\n  }\n\n  // Keywords\n  if (metadata.keywords && metadata.keywords.length > 0) {\n    articleSchema.keywords = metadata.keywords;\n  }\n\n  // Word count\n  if (metadata.wordCount) {\n    articleSchema.wordCount = metadata.wordCount;\n  }\n\n  // Reading time\n  if (metadata.readingTime) {\n    articleSchema.timeRequired = metadata.readingTime;\n  }\n\n  schemas.push(articleSchema);\n}\n\n/**\n * Generates Product schema\n * @param {Array} schemas - Schemas array to modify\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n */\nfunction generateProductSchema(schemas, metadata, siteConfig) {\n  const productSchema = {\n    \"@type\": \"Product\",\n    \"name\": metadata.title,\n    \"description\": metadata.description\n  };\n\n  // Image\n  if (metadata.image) {\n    productSchema.image = metadata.image;\n  }\n\n  // Brand\n  if (metadata.brand) {\n    productSchema.brand = {\n      \"@type\": \"Brand\",\n      \"name\": metadata.brand\n    };\n  }\n\n  // SKU\n  if (metadata.sku) {\n    productSchema.sku = metadata.sku;\n  }\n\n  // Offers\n  if (metadata.price) {\n    productSchema.offers = {\n      \"@type\": \"Offer\",\n      \"price\": metadata.price,\n      \"priceCurrency\": metadata.currency || \"USD\",\n      \"availability\": `https://schema.org/${metadata.availability || \"InStock\"}`,\n      \"condition\": `https://schema.org/${metadata.condition || \"NewCondition\"}`\n    };\n  }\n\n  // Aggregate rating\n  if (metadata.rating) {\n    productSchema.aggregateRating = {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": metadata.rating,\n      \"ratingCount\": metadata.ratingCount || 1\n    };\n  }\n\n  schemas.push(productSchema);\n}\n\n/**\n * Generates LocalBusiness schema\n * @param {Array} schemas - Schemas array to modify\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n */\nfunction generateLocalBusinessSchema(schemas, metadata, siteConfig) {\n  const businessSchema = {\n    \"@type\": \"LocalBusiness\",\n    \"name\": metadata.title || siteConfig.businessName,\n    \"description\": metadata.description\n  };\n\n  // Address\n  if (metadata.address || siteConfig.address) {\n    const address = metadata.address || siteConfig.address;\n    businessSchema.address = {\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": address.streetAddress,\n      \"addressLocality\": address.city,\n      \"addressRegion\": address.state,\n      \"postalCode\": address.postalCode,\n      \"addressCountry\": address.country\n    };\n  }\n\n  // Geographic coordinates\n  if (metadata.latitude && metadata.longitude) {\n    businessSchema.geo = {\n      \"@type\": \"GeoCoordinates\",\n      \"latitude\": metadata.latitude,\n      \"longitude\": metadata.longitude\n    };\n  }\n\n  // Contact information\n  if (metadata.phone || siteConfig.phone) {\n    businessSchema.telephone = metadata.phone || siteConfig.phone;\n  }\n\n  if (metadata.email || siteConfig.email) {\n    businessSchema.email = metadata.email || siteConfig.email;\n  }\n\n  // Opening hours\n  if (metadata.openingHours || siteConfig.openingHours) {\n    businessSchema.openingHours = metadata.openingHours || siteConfig.openingHours;\n  }\n\n  // Image\n  if (metadata.image) {\n    businessSchema.image = metadata.image;\n  }\n\n  schemas.push(businessSchema);\n}\n\n/**\n * Generates WebPage schema\n * @param {Array} schemas - Schemas array to modify\n * @param {Object} metadata - Extracted metadata\n * @param {Object} siteConfig - Site configuration\n */\nfunction generateWebPageSchema(schemas, metadata, siteConfig) {\n  const webPageSchema = {\n    \"@type\": \"WebPage\",\n    \"name\": metadata.title,\n    \"url\": metadata.canonicalURL\n  };\n\n  if (metadata.description) {\n    webPageSchema.description = metadata.description;\n  }\n\n  if (metadata.image) {\n    webPageSchema.image = metadata.image;\n  }\n\n  // Part of website\n  if (siteConfig.siteName) {\n    webPageSchema.isPartOf = {\n      \"@type\": \"WebSite\",\n      \"name\": siteConfig.siteName,\n      \"url\": siteConfig.hostname\n    };\n  }\n\n  schemas.push(webPageSchema);\n}\n\n/**\n * Generates BreadcrumbList schema\n * @param {Array} schemas - Schemas array to modify\n * @param {string} filePath - File path\n * @param {Object} siteConfig - Site configuration\n */\nfunction generateBreadcrumbSchema(schemas, filePath, siteConfig) {\n  if (!filePath || !siteConfig.hostname) {\n    return;\n  }\n\n  const pathSegments = filePath\n    .replace(/\\.html?$/, '')\n    .replace(/\\/index$/, '')\n    .split('/')\n    .filter(segment => segment.length > 0);\n\n  if (pathSegments.length === 0) {\n    return;\n  }\n\n  const breadcrumbItems = [];\n  let currentPath = '';\n\n  // Add home\n  breadcrumbItems.push({\n    \"@type\": \"ListItem\",\n    \"position\": 1,\n    \"name\": \"Home\",\n    \"item\": siteConfig.hostname\n  });\n\n  // Add path segments\n  pathSegments.forEach((segment, index) => {\n    currentPath += `/${segment}`;\n    const name = segment.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    \n    breadcrumbItems.push({\n      \"@type\": \"ListItem\",\n      \"position\": index + 2,\n      \"name\": name,\n      \"item\": `${siteConfig.hostname}${currentPath}`\n    });\n  });\n\n  const breadcrumbSchema = {\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": breadcrumbItems\n  };\n\n  schemas.push(breadcrumbSchema);\n}\n\n/**\n * Generates Organization schema\n * @param {Array} schemas - Schemas array to modify\n * @param {Object} siteConfig - Site configuration\n */\nfunction generateOrganizationSchema(schemas, siteConfig) {\n  if (!siteConfig.organization) {\n    return;\n  }\n\n  const org = siteConfig.organization;\n  const organizationSchema = {\n    \"@type\": \"Organization\",\n    \"name\": org.name,\n    \"url\": org.url || siteConfig.hostname\n  };\n\n  if (org.logo) {\n    organizationSchema.logo = {\n      \"@type\": \"ImageObject\",\n      \"url\": org.logo\n    };\n  }\n\n  if (org.description) {\n    organizationSchema.description = org.description;\n  }\n\n  if (org.sameAs) {\n    organizationSchema.sameAs = Array.isArray(org.sameAs) ? org.sameAs : [org.sameAs];\n  }\n\n  if (org.contactPoint) {\n    organizationSchema.contactPoint = {\n      \"@type\": \"ContactPoint\",\n      \"telephone\": org.contactPoint.telephone,\n      \"contactType\": org.contactPoint.contactType || \"customer service\"\n    };\n  }\n\n  schemas.push(organizationSchema);\n}\n\n/**\n * Generates publisher schema for articles\n * @param {Object} organization - Organization configuration\n * @returns {Object} Publisher schema\n */\nfunction generatePublisherSchema(organization) {\n  const publisher = {\n    \"@type\": \"Organization\",\n    \"name\": organization.name\n  };\n\n  if (organization.logo) {\n    publisher.logo = {\n      \"@type\": \"ImageObject\",\n      \"url\": organization.logo\n    };\n  }\n\n  return publisher;\n}\n\n/**\n * Converts JSON-LD schemas to HTML script tag\n * @param {Array} schemas - Array of JSON-LD schemas\n * @returns {string} HTML script tag\n */\nfunction generateJsonLdHtml(schemas) {\n  if (schemas.length === 0) {\n    return '';\n  }\n\n  // If multiple schemas, use @graph\n  const jsonLd = schemas.length === 1 \n    ? schemas[0]\n    : {\n        \"@context\": \"https://schema.org\",\n        \"@graph\": schemas.map(schema => {\n          const { \"@context\": context, ...rest } = schema;\n          return rest;\n        })\n      };\n\n  const jsonString = JSON.stringify(jsonLd, null, 2);\n  return `<script type=\"application/ld+json\">\\n${jsonString}\\n</script>`;\n}\n\n/**\n * Validates a JSON-LD schema object\n * @param {Object} schema - Schema to validate\n * @returns {boolean} Whether the schema is valid\n */\nexport function validateJsonLd(schema) {\n  if (!schema || typeof schema !== 'object') {\n    return false;\n  }\n\n  // Must have @type\n  if (!schema['@type']) {\n    return false;\n  }\n\n  // Basic validation for common required properties\n  switch (schema['@type']) {\n    case 'Article':\n      return !!(schema.headline && schema.author);\n    case 'Product':\n      return !!(schema.name);\n    case 'Organization':\n      return !!(schema.name);\n    case 'LocalBusiness':\n      return !!(schema.name);\n    case 'WebSite':\n      return !!(schema.name && schema.url);\n    case 'WebPage':\n      return !!(schema.name && schema.url);\n    default:\n      return true; // Allow unknown types\n  }\n}","/**\n * @fileoverview HTML injection utilities for strategic head element placement.\n */\n\nimport { load } from 'cheerio';\n\n/**\n * @typedef {Object} InjectionOptions\n * @property {boolean} [createHead=true] - Whether to create <head> if it doesn't exist\n * @property {boolean} [ensureTitle=true] - Whether to ensure a <title> tag exists\n * @property {string} [position='end'] - Where to inject: 'start', 'end', 'before-title', 'after-title'\n */\n\n/**\n * Injects HTML content into the head section of an HTML document\n * @param {string} html - The HTML content to modify\n * @param {string} content - The content to inject\n * @param {InjectionOptions} [options={}] - Injection options\n * @returns {string} Modified HTML content\n */\nexport function injectIntoHead(html, content, options = {}) {\n  const {\n    createHead = true,\n    ensureTitle = true,\n    position = 'end'\n  } = options;\n\n  // Load HTML with Cheerio\n  const $ = load(html, {\n    decodeEntities: false,\n    lowerCaseAttributeNames: false\n  });\n\n  // Ensure head element exists\n  let $head = $('head');\n  if ($head.length === 0 && createHead) {\n    // Create head if it doesn't exist\n    if ($('html').length === 0) {\n      // No html element, wrap everything\n      $('body').before('<head></head>');\n    } else {\n      // Add head to existing html element\n      $('html').prepend('<head></head>');\n    }\n    $head = $('head');\n  }\n\n  if ($head.length === 0) {\n    // Can't inject without a head element\n    return html;\n  }\n\n  // Ensure title exists if requested\n  if (ensureTitle && $head.find('title').length === 0) {\n    $head.prepend('<title></title>');\n  }\n\n  // Inject content based on position\n  switch (position) {\n    case 'start':\n      $head.prepend(content);\n      break;\n      \n    case 'before-title':\n      const $title = $head.find('title').first();\n      if ($title.length > 0) {\n        $title.before(content);\n      } else {\n        $head.prepend(content);\n      }\n      break;\n      \n    case 'after-title':\n      const $titleAfter = $head.find('title').first();\n      if ($titleAfter.length > 0) {\n        $titleAfter.after(content);\n      } else {\n        $head.append(content);\n      }\n      break;\n      \n    case 'end':\n    default:\n      $head.append(content);\n      break;\n  }\n\n  return $.html();\n}\n\n/**\n * Updates or creates the title tag\n * @param {string} html - The HTML content to modify\n * @param {string} title - The title content\n * @returns {string} Modified HTML content\n */\nexport function updateTitle(html, title) {\n  const $ = load(html, {\n    decodeEntities: false,\n    lowerCaseAttributeNames: false\n  });\n\n  let $head = $('head');\n  if ($head.length === 0) {\n    $('body').before('<head></head>');\n    $head = $('head');\n  }\n\n  const $title = $head.find('title');\n  if ($title.length > 0) {\n    $title.text(title);\n  } else {\n    $head.prepend(`<title>${escapeHtml(title)}</title>`);\n  }\n\n  return $.html();\n}\n\n/**\n * Adds or updates a meta tag\n * @param {string} html - The HTML content to modify\n * @param {string} name - The meta tag name or property\n * @param {string} content - The meta tag content\n * @param {string} [type='name'] - The attribute type: 'name', 'property', 'http-equiv'\n * @returns {string} Modified HTML content\n */\nexport function updateMetaTag(html, name, content, type = 'name') {\n  const $ = load(html, {\n    decodeEntities: false,\n    lowerCaseAttributeNames: false\n  });\n\n  let $head = $('head');\n  if ($head.length === 0) {\n    $('body').before('<head></head>');\n    $head = $('head');\n  }\n\n  // Find existing meta tag\n  const selector = `meta[${type}=\"${name}\"]`;\n  const $existing = $head.find(selector);\n\n  if ($existing.length > 0) {\n    // Update existing meta tag\n    $existing.attr('content', content);\n  } else {\n    // Create new meta tag\n    const metaTag = `<meta ${type}=\"${escapeHtml(name)}\" content=\"${escapeHtml(content)}\">`;\n    \n    // Insert after existing meta tags but before other elements\n    const $lastMeta = $head.find('meta').last();\n    if ($lastMeta.length > 0) {\n      $lastMeta.after(metaTag);\n    } else {\n      // Insert after title if it exists, otherwise at the start\n      const $title = $head.find('title');\n      if ($title.length > 0) {\n        $title.after(metaTag);\n      } else {\n        $head.prepend(metaTag);\n      }\n    }\n  }\n\n  return $.html();\n}\n\n/**\n * Adds or updates a link tag\n * @param {string} html - The HTML content to modify\n * @param {string} rel - The link relationship\n * @param {string} href - The link URL\n * @param {Object} [attributes={}] - Additional attributes\n * @returns {string} Modified HTML content\n */\nexport function updateLinkTag(html, rel, href, attributes = {}) {\n  const $ = load(html, {\n    decodeEntities: false,\n    lowerCaseAttributeNames: false\n  });\n\n  let $head = $('head');\n  if ($head.length === 0) {\n    $('body').before('<head></head>');\n    $head = $('head');\n  }\n\n  // Find existing link tag\n  const $existing = $head.find(`link[rel=\"${rel}\"]`);\n\n  // Build attributes string\n  const attrs = Object.entries(attributes)\n    .map(([key, value]) => `${key}=\"${escapeHtml(value)}\"`)\n    .join(' ');\n\n  const linkTag = `<link rel=\"${escapeHtml(rel)}\" href=\"${escapeHtml(href)}\"${attrs ? ' ' + attrs : ''}>`;\n\n  if ($existing.length > 0) {\n    // Replace existing link tag\n    $existing.replaceWith(linkTag);\n  } else {\n    // Add new link tag after other links\n    const $lastLink = $head.find('link').last();\n    if ($lastLink.length > 0) {\n      $lastLink.after(linkTag);\n    } else {\n      // Insert after meta tags\n      const $lastMeta = $head.find('meta').last();\n      if ($lastMeta.length > 0) {\n        $lastMeta.after(linkTag);\n      } else {\n        $head.append(linkTag);\n      }\n    }\n  }\n\n  return $.html();\n}\n\n/**\n * Adds a script tag to the head (for JSON-LD structured data)\n * @param {string} html - The HTML content to modify\n * @param {string} scriptContent - The script content\n * @param {string} [type='application/ld+json'] - The script type\n * @param {string} [position='end'] - Where to place the script\n * @returns {string} Modified HTML content\n */\nexport function addScript(html, scriptContent, type = 'application/ld+json', position = 'end') {\n  const $ = load(html, {\n    decodeEntities: false,\n    lowerCaseAttributeNames: false\n  });\n\n  let $head = $('head');\n  if ($head.length === 0) {\n    $('body').before('<head></head>');\n    $head = $('head');\n  }\n\n  const scriptTag = `<script type=\"${escapeHtml(type)}\">${scriptContent}</script>`;\n\n  if (position === 'end') {\n    $head.append(scriptTag);\n  } else {\n    $head.prepend(scriptTag);\n  }\n\n  return $.html();\n}\n\n/**\n * Escapes HTML special characters\n * @param {string} str - String to escape\n * @returns {string} Escaped string\n */\nfunction escapeHtml(str) {\n  if (typeof str !== 'string') {\n    return String(str);\n  }\n  \n  return str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\n/**\n * Removes existing SEO meta tags (for clean injection)\n * @param {string} html - The HTML content to modify\n * @param {string[]} [tags] - Specific tags to remove\n * @returns {string} Modified HTML content\n */\nexport function removeExistingMetaTags(html, tags = []) {\n  const $ = load(html, {\n    decodeEntities: false,\n    lowerCaseAttributeNames: false\n  });\n\n  const defaultTags = [\n    'description',\n    'keywords',\n    'robots',\n    'canonical'\n  ];\n\n  const ogTags = [\n    'og:title',\n    'og:description', \n    'og:image',\n    'og:url',\n    'og:type',\n    'og:site_name'\n  ];\n\n  const twitterTags = [\n    'twitter:card',\n    'twitter:title',\n    'twitter:description',\n    'twitter:image',\n    'twitter:site',\n    'twitter:creator'\n  ];\n\n  const tagsToRemove = tags.length > 0 ? tags : [...defaultTags, ...ogTags, ...twitterTags];\n\n  tagsToRemove.forEach(tag => {\n    $(`meta[name=\"${tag}\"]`).remove();\n    $(`meta[property=\"${tag}\"]`).remove();\n  });\n\n  // Remove existing JSON-LD scripts\n  $('script[type=\"application/ld+json\"]').remove();\n\n  // Remove existing canonical link\n  $('link[rel=\"canonical\"]').remove();\n\n  return $.html();\n}","/**\n * @fileoverview Unified head optimizer that orchestrates all SEO metadata generation.\n */\n\nimport { extractMetadata } from './metadata-extractor.js';\nimport { generateMetaTags, metaTagsToHtml, linkTagsToHtml } from '../generators/meta-generator.js';\nimport { generateOpenGraphTags, openGraphTagsToHtml } from '../generators/opengraph-generator.js';\nimport { generateTwitterCardTags, twitterCardTagsToHtml } from '../generators/twitter-generator.js';\nimport { generateJsonLd } from '../generators/jsonld-generator.js';\nimport { \n  injectIntoHead, \n  updateTitle, \n  updateMetaTag, \n  updateLinkTag, \n  addScript,\n  removeExistingMetaTags \n} from '../utils/html-injector.js';\n\n/**\n * @typedef {Object} HeadOptimizationOptions\n * @property {string} hostname - Base hostname for generating URLs\n * @property {string} [seoProperty='seo'] - Frontmatter property containing SEO data\n * @property {Object} [defaults] - Default values for missing metadata\n * @property {Object} [fallbacks] - Fallback property mappings\n * @property {Object} [social] - Social media configuration\n * @property {Object} [jsonLd] - JSON-LD configuration\n * @property {boolean} [cleanExisting=true] - Remove existing SEO tags before injection\n * @property {boolean} [generateSitemap=true] - Whether to include files in sitemap\n */\n\n/**\n * @typedef {Object} OptimizationResult\n * @property {string} html - Modified HTML content\n * @property {Object} metadata - Extracted metadata\n * @property {Object} generated - Generated SEO content\n */\n\n/**\n * Processes a file and optimizes its head section with SEO metadata\n * @param {string} filePath - File path relative to source\n * @param {Object} frontmatter - File frontmatter and content\n * @param {HeadOptimizationOptions} options - Optimization options\n * @returns {OptimizationResult} Optimization result\n */\nexport async function optimizeHead(filePath, frontmatter, options) {\n  const {\n    hostname,\n    seoProperty = 'seo',\n    defaults = {},\n    fallbacks = {},\n    social = {},\n    jsonLd = {},\n    cleanExisting = true,\n    generateSitemap = true\n  } = options;\n\n  // Skip non-HTML files\n  if (!isHtmlFile(filePath) || !Buffer.isBuffer(frontmatter.contents)) {\n    return {\n      html: frontmatter.contents.toString(),\n      metadata: null,\n      generated: null\n    };\n  }\n\n  // Extract unified metadata\n  const metadata = extractMetadata(filePath, frontmatter, {\n    hostname,\n    seoProperty,\n    defaults,\n    fallbacks\n  });\n\n  // Check if file should be excluded from SEO processing\n  if (metadata.noIndex && !generateSitemap) {\n    return {\n      html: frontmatter.contents.toString(),\n      metadata,\n      generated: null\n    };\n  }\n\n  // Generate all SEO content\n  const generated = await generateAllSeoContent(metadata, {\n    hostname,\n    social,\n    jsonLd,\n    filePath\n  });\n\n  // Inject SEO content into HTML\n  let html = frontmatter.contents.toString();\n  html = await injectSeoContent(html, metadata, generated, { cleanExisting });\n\n  return {\n    html,\n    metadata,\n    generated\n  };\n}\n\n/**\n * Generates all SEO content from metadata\n * @param {Object} metadata - Extracted metadata\n * @param {Object} config - Generation configuration\n * @returns {Object} Generated SEO content\n */\nasync function generateAllSeoContent(metadata, config) {\n  const { hostname, social, jsonLd, filePath } = config;\n\n  // Site configuration combining hostname with social/jsonLd configs\n  const siteConfig = {\n    hostname,\n    ...social,\n    ...jsonLd\n  };\n\n  // Generate meta tags\n  const metaResult = generateMetaTags(metadata, siteConfig);\n  \n  // Generate Open Graph tags\n  const ogResult = generateOpenGraphTags(metadata, siteConfig);\n  \n  // Generate Twitter Card tags\n  const twitterResult = generateTwitterCardTags(metadata, siteConfig);\n  \n  // Generate JSON-LD structured data\n  const jsonLdResult = generateJsonLd(metadata, siteConfig, filePath);\n\n  return {\n    meta: metaResult,\n    openGraph: ogResult,\n    twitter: twitterResult,\n    jsonLd: jsonLdResult\n  };\n}\n\n/**\n * Injects SEO content into HTML head section\n * @param {string} html - Original HTML content\n * @param {Object} metadata - Extracted metadata\n * @param {Object} generated - Generated SEO content\n * @param {Object} options - Injection options\n * @returns {string} Modified HTML content\n */\nasync function injectSeoContent(html, metadata, generated, options = {}) {\n  const { cleanExisting = true } = options;\n  \n  let modifiedHtml = html;\n\n  // Clean existing SEO tags if requested\n  if (cleanExisting) {\n    modifiedHtml = removeExistingMetaTags(modifiedHtml);\n  }\n\n  // Update title tag\n  if (metadata.title) {\n    modifiedHtml = updateTitle(modifiedHtml, metadata.title);\n  }\n\n  // Inject meta tags (critical tags first)\n  const criticalMetaTags = getCriticalMetaTags(generated.meta.metaTags);\n  const otherMetaTags = getOtherMetaTags(generated.meta.metaTags);\n\n  // Inject critical meta tags early\n  for (const tag of criticalMetaTags) {\n    if (tag.name) {\n      modifiedHtml = updateMetaTag(modifiedHtml, tag.name, tag.content, 'name');\n    } else if (tag.httpEquiv) {\n      modifiedHtml = updateMetaTag(modifiedHtml, tag.httpEquiv, tag.content, 'http-equiv');\n    }\n  }\n\n  // Inject link tags (after critical meta tags)\n  for (const link of generated.meta.linkTags) {\n    modifiedHtml = updateLinkTag(modifiedHtml, link.rel, link.href, \n      Object.fromEntries(Object.entries(link).filter(([key]) => !['rel', 'href'].includes(key)))\n    );\n  }\n\n  // Inject remaining meta tags\n  for (const tag of otherMetaTags) {\n    if (tag.name) {\n      modifiedHtml = updateMetaTag(modifiedHtml, tag.name, tag.content, 'name');\n    }\n  }\n\n  // Inject Open Graph tags\n  for (const tag of generated.openGraph.metaTags) {\n    modifiedHtml = updateMetaTag(modifiedHtml, tag.property, tag.content, 'property');\n  }\n\n  // Inject Twitter Card tags\n  for (const tag of generated.twitter.metaTags) {\n    modifiedHtml = updateMetaTag(modifiedHtml, tag.name, tag.content, 'name');\n  }\n\n  // Inject JSON-LD structured data (at the end for optimal loading)\n  if (generated.jsonLd.html) {\n    const jsonLdContent = generated.jsonLd.html.replace(/<script[^>]*>|<\\/script>/g, '');\n    modifiedHtml = addScript(modifiedHtml, jsonLdContent, 'application/ld+json', 'end');\n  }\n\n  return modifiedHtml;\n}\n\n/**\n * Determines critical meta tags that should be injected early\n * @param {Array} metaTags - All meta tags\n * @returns {Array} Critical meta tags\n */\nfunction getCriticalMetaTags(metaTags) {\n  const criticalTags = ['viewport', 'charset', 'description', 'robots'];\n  \n  return metaTags.filter(tag => \n    criticalTags.includes(tag.name) || \n    criticalTags.includes(tag.httpEquiv)\n  );\n}\n\n/**\n * Gets non-critical meta tags\n * @param {Array} metaTags - All meta tags\n * @returns {Array} Non-critical meta tags\n */\nfunction getOtherMetaTags(metaTags) {\n  const criticalTags = ['viewport', 'charset', 'description', 'robots'];\n  \n  return metaTags.filter(tag => \n    !criticalTags.includes(tag.name) && \n    !criticalTags.includes(tag.httpEquiv)\n  );\n}\n\n/**\n * Checks if a file is an HTML file that should be processed\n * @param {string} filePath - File path\n * @returns {boolean} Whether file should be processed\n */\nfunction isHtmlFile(filePath) {\n  return /\\.html?$/i.test(filePath);\n}\n\n/**\n * Batch processes multiple files for SEO optimization\n * @param {Object} files - Metalsmith files object\n * @param {HeadOptimizationOptions} options - Optimization options\n * @returns {Promise<Object>} Results for each processed file\n */\nexport async function batchOptimizeHeads(files, options) {\n  const results = {};\n  const fileList = Object.keys(files);\n\n  // Process files in parallel batches\n  const batchSize = options.batchSize || 10;\n  \n  for (let i = 0; i < fileList.length; i += batchSize) {\n    const batch = fileList.slice(i, i + batchSize);\n    \n    const batchPromises = batch.map(async (filePath) => {\n      try {\n        const result = await optimizeHead(filePath, files[filePath], options);\n        \n        // Update file contents if HTML was modified\n        if (result.html !== files[filePath].contents.toString()) {\n          files[filePath].contents = Buffer.from(result.html);\n        }\n        \n        // Store metadata for potential use by other plugins\n        if (result.metadata) {\n          files[filePath].seoMetadata = result.metadata;\n        }\n        \n        return { filePath, result };\n      } catch (error) {\n        console.error(`SEO optimization failed for ${filePath}:`, error);\n        return { filePath, error };\n      }\n    });\n\n    const batchResults = await Promise.all(batchPromises);\n    \n    // Collect results\n    batchResults.forEach(({ filePath, result, error }) => {\n      results[filePath] = error ? { error } : result;\n    });\n  }\n\n  return results;\n}\n\n/**\n * Extracts SEO metadata from files without modifying HTML (for sitemap generation)\n * @param {Object} files - Metalsmith files object\n * @param {HeadOptimizationOptions} options - Extraction options\n * @returns {Object} Extracted metadata for each file\n */\nexport function extractAllMetadata(files, options) {\n  const metadata = {};\n  \n  Object.keys(files).forEach(filePath => {\n    try {\n      const extracted = extractMetadata(filePath, files[filePath], options);\n      metadata[filePath] = extracted;\n    } catch (error) {\n      console.error(`Metadata extraction failed for ${filePath}:`, error);\n      metadata[filePath] = { error };\n    }\n  });\n\n  return metadata;\n}\n\n/**\n * Validates SEO configuration\n * @param {HeadOptimizationOptions} options - Options to validate\n * @returns {Array} Array of validation errors\n */\nexport function validateSeoConfig(options) {\n  const errors = [];\n\n  if (!options.hostname) {\n    errors.push('hostname is required');\n  }\n\n  if (options.hostname && !isValidUrl(options.hostname)) {\n    errors.push('hostname must be a valid URL');\n  }\n\n  if (options.social?.twitterSite && !options.social.twitterSite.startsWith('@')) {\n    errors.push('social.twitterSite should start with @');\n  }\n\n  if (options.jsonLd?.organization && !options.jsonLd.organization.name) {\n    errors.push('jsonLd.organization.name is required when organization is specified');\n  }\n\n  return errors;\n}\n\n/**\n * Validates if a string is a valid URL\n * @param {string} str - String to validate\n * @returns {boolean} Whether string is valid URL\n */\nfunction isValidUrl(str) {\n  try {\n    new URL(str);\n    return true;\n  } catch {\n    return false;\n  }\n}","/**\n * @fileoverview URL building and validation utilities for sitemap generation.\n */\n\nimport path from \"path\";\nimport { get } from \"../utils/object-utils.js\";\n\n/**\n * Determines whether a file should be included in the sitemap.\n * Files are included if they match the pattern and are not marked as private.\n * @param {string} file - File path relative to source directory\n * @param {Object} frontmatter - File metadata and frontmatter\n * @param {Object} metalsmith - Metalsmith instance\n * @param {string} pattern - Glob pattern to match files\n * @param {string} privateProperty - Property name to check if file should be excluded\n * @returns {boolean} True if file should be processed, false otherwise\n */\nexport function checkFile(file, frontmatter, metalsmith, pattern, privateProperty) {\n  // Only process files that match the pattern\n  const matchResult = metalsmith.match(pattern, file);\n  if (!matchResult || matchResult.length === 0) {\n    return false;\n  }\n\n  // Don't process private files\n  if (get(frontmatter, privateProperty)) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Constructs the final URL for a file based on configuration options.\n * Handles canonical URL overrides, index file omission, and extension removal.\n * @param {string} file - File path relative to source directory\n * @param {Object} frontmatter - File metadata and frontmatter\n * @param {Object} options - URL building options\n * @param {string} options.urlProperty - Property name to read canonical URL from file metadata\n * @param {boolean} options.omitIndex - Whether to omit index.html from URLs\n * @param {boolean} options.omitExtension - Whether to omit file extensions from URLs\n * @returns {string} Final URL for the sitemap entry\n */\nexport function buildUrl(file, frontmatter, options) {\n  const { urlProperty, omitIndex, omitExtension } = options;\n\n  // Frontmatter settings take precedence\n  const canonicalUrl = get(frontmatter, urlProperty);\n  if (typeof canonicalUrl === \"string\") {\n    return canonicalUrl;\n  }\n\n  // Remove index.html if necessary\n  const indexFile = \"index.html\";\n  if (omitIndex && path.basename(file) === indexFile) {\n    return replaceBackslash(file.slice(0, 0 - indexFile.length));\n  }\n\n  // Remove extension if necessary\n  if (omitExtension) {\n    return replaceBackslash(file.slice(0, 0 - path.extname(file).length));\n  }\n\n  // Otherwise just use 'file'\n  return replaceBackslash(file);\n}\n\n/**\n * Normalizes file paths by replacing backslashes with forward slashes.\n * Ensures cross-platform compatibility for URLs.\n * @param {string} url - File path that may contain backslashes\n * @returns {string} Normalized path with forward slashes\n */\nexport function replaceBackslash(url) {\n  return url.replace(/\\\\/g, \"/\");\n}","/**\n * @fileoverview Automatic priority and changefreq calculation utilities.\n */\n\nimport path from \"path\";\nimport { get } from \"../utils/object-utils.js\";\n\n/**\n * Calculates automatic priority based on content analysis.\n * @param {string} file - File path relative to source directory\n * @param {Object} frontmatter - File metadata and frontmatter\n * @param {Object} options - Calculation options\n * @param {string} options.modifiedProperty - Property name to read last modified date from file metadata\n * @param {Date|string} options.lastmod - Default last modified date\n * @returns {number} Calculated priority between 0.1 and 1.0\n */\nexport function calculatePriority(file, frontmatter, options) {\n  const { modifiedProperty, lastmod } = options;\n  let calculatedPriority = 0.5; // Base priority\n\n  // Path depth analysis (shallower = higher priority)\n  const pathDepth = file.split(path.sep).length;\n  if (pathDepth === 1) {\n    calculatedPriority += 0.3; // Root level files\n  } else if (pathDepth === 2) {\n    calculatedPriority += 0.2; // One level deep\n  } else if (pathDepth === 3) {\n    calculatedPriority += 0.1; // Two levels deep\n  }\n  // Deeper files keep base priority\n\n  // Content type analysis based on path patterns\n  const lowerFile = file.toLowerCase();\n  if (lowerFile.includes('/blog/') || lowerFile.includes('/news/') || lowerFile.includes('/articles/')) {\n    calculatedPriority += 0.1; // Blog content gets boost\n  }\n  if (lowerFile.includes('/services/') || lowerFile.includes('/products/')) {\n    calculatedPriority += 0.2; // Service/product pages get higher boost\n  }\n  if (lowerFile.includes('index.html') && pathDepth <= 2) {\n    calculatedPriority += 0.2; // Index pages are important\n  }\n  if (lowerFile.includes('/about') || lowerFile.includes('/contact')) {\n    calculatedPriority += 0.15; // About/contact pages\n  }\n\n  // Content age analysis (if lastmod is available)\n  const fileLastmod = get(frontmatter, modifiedProperty) || lastmod;\n  if (fileLastmod) {\n    const modDate = fileLastmod instanceof Date ? fileLastmod : new Date(fileLastmod);\n    const now = new Date();\n    const daysSinceModified = (now - modDate) / (1000 * 60 * 60 * 24);\n    \n    if (daysSinceModified < 30) {\n      calculatedPriority += 0.1; // Recently modified content\n    } else if (daysSinceModified < 90) {\n      calculatedPriority += 0.05; // Moderately recent content\n    }\n    // Older content gets no bonus\n  }\n\n  // Content length analysis (if contents available)\n  if (Buffer.isBuffer(frontmatter.contents)) {\n    const contentLength = frontmatter.contents.length;\n    if (contentLength > 5000) {\n      calculatedPriority += 0.05; // Substantial content gets small boost\n    }\n  }\n\n  // Ensure priority stays within valid range\n  return Math.min(Math.max(calculatedPriority, 0.1), 1.0);\n}\n\n/**\n * Calculates automatic change frequency based on content analysis.\n * @param {string} file - File path relative to source directory\n * @param {Object} frontmatter - File metadata and frontmatter\n * @param {Object} options - Calculation options\n * @param {string} options.modifiedProperty - Property name to read last modified date from file metadata\n * @param {Date|string} options.lastmod - Default last modified date\n * @returns {string} Calculated change frequency\n */\nexport function calculateChangefreq(file, frontmatter, options) {\n  const { modifiedProperty, lastmod } = options;\n  const lowerFile = file.toLowerCase();\n\n  // Blog and news content changes frequently\n  if (lowerFile.includes('/blog/') || lowerFile.includes('/news/') || lowerFile.includes('/articles/')) {\n    return 'weekly';\n  }\n\n  // Index pages and category pages update when new content is added\n  if (lowerFile.includes('index.html')) {\n    if (lowerFile.includes('/blog/') || lowerFile.includes('/news/')) {\n      return 'weekly'; // Blog index updates frequently\n    }\n    return 'monthly'; // Other index pages update less frequently\n  }\n\n  // Service and product pages update occasionally\n  if (lowerFile.includes('/services/') || lowerFile.includes('/products/')) {\n    return 'monthly';\n  }\n\n  // About, contact, and policy pages rarely change\n  if (lowerFile.includes('/about') || lowerFile.includes('/contact') || \n      lowerFile.includes('/privacy') || lowerFile.includes('/terms')) {\n    return 'yearly';\n  }\n\n  // Documentation might update occasionally\n  if (lowerFile.includes('/docs/') || lowerFile.includes('/documentation/')) {\n    return 'monthly';\n  }\n\n  // Check content age if available\n  const fileLastmod = get(frontmatter, modifiedProperty) || lastmod;\n  if (fileLastmod) {\n    const modDate = fileLastmod instanceof Date ? fileLastmod : new Date(fileLastmod);\n    const now = new Date();\n    const daysSinceModified = (now - modDate) / (1000 * 60 * 60 * 24);\n    \n    if (daysSinceModified < 7) {\n      return 'weekly'; // Recently modified\n    } else if (daysSinceModified < 30) {\n      return 'monthly'; // Modified in last month\n    } else if (daysSinceModified < 365) {\n      return 'yearly'; // Modified in last year\n    }\n  }\n\n  // Default for unclassified content\n  return 'monthly';\n}","/**\n * @fileoverview Sitemap processor for generating sitemap.xml files.\n */\n\nimport path from \"path\";\nimport { SitemapStream, streamToPromise } from \"sitemap\";\nimport { get, pick, identity } from \"../utils/object-utils.js\";\nimport { checkFile, buildUrl } from \"./url-builder.js\";\nimport { calculatePriority, calculateChangefreq } from \"./auto-calculator.js\";\n\n/**\n * @typedef {Object} SitemapOptions\n * @property {string} hostname - Base hostname for all URLs in the sitemap\n * @property {Date|string} [lastmod] - Default last modified date for all files\n * @property {string} [links] - Property name to read additional links from file metadata\n * @property {'always'|'hourly'|'daily'|'weekly'|'monthly'|'yearly'|'never'} [changefreq] - Default change frequency\n * @property {boolean} [omitExtension] - Whether to omit file extensions from URLs\n * @property {boolean} [omitIndex] - Whether to omit index.html from URLs\n * @property {string} [output='sitemap.xml'] - Output filename for the sitemap\n * @property {string} [pattern] - Glob pattern to match files for inclusion (default: all HTML files)\n * @property {string|number} [priority] - Default priority for all URLs (0.0 to 1.0)\n * @property {string} [urlProperty='canonical'] - Property name to read canonical URL from file metadata\n * @property {string} [modifiedProperty='lastmod'] - Property name to read last modified date from file metadata\n * @property {string} [privateProperty='private'] - Property name to check if file should be excluded\n * @property {string} [priorityProperty='priority'] - Property name to read priority from file metadata\n * @property {boolean} [auto=false] - Enable automatic priority and changefreq calculation based on content analysis\n */\n\n/**\n * Processes files and generates sitemap.xml\n * @param {Object} files - Metalsmith files object\n * @param {Object} metalsmith - Metalsmith instance\n * @param {SitemapOptions} options - Sitemap configuration options\n * @returns {Promise<void>}\n */\nexport async function processSitemap(files, metalsmith, options) {\n  const {\n    auto = false,\n    changefreq,\n    hostname,\n    lastmod,\n    links: linksOption,\n    omitExtension,\n    omitIndex,\n    output = \"sitemap.xml\",\n    pattern = \"**/*.html\",\n    priority,\n    urlProperty = \"canonical\",\n    modifiedProperty = \"lastmod\",\n    privateProperty = \"private\",\n    priorityProperty = \"priority\",\n  } = options;\n\n  const links = [];\n\n  // Custom sorting to ensure consistent output order\n  // Files in root directory come first, then subdirectories\n  const sortedFiles = Object.keys(files).sort((a, b) => {\n    const aDepth = a.split(path.sep).length;\n    const bDepth = b.split(path.sep).length;\n    if (aDepth !== bDepth) {\n      return aDepth - bDepth; // Shallower paths first\n    }\n    return a.localeCompare(b); // Alphabetical within same depth\n  });\n\n  sortedFiles.forEach(function (file) {\n    // Get the current file's frontmatter\n    const frontmatter = files[file];\n    \n    // Validate file.contents is a Buffer before processing\n    if (!Buffer.isBuffer(frontmatter.contents)) {\n      return;\n    }\n\n    // Only process files that pass the check\n    if (!checkFile(file, frontmatter, metalsmith, pattern, privateProperty)) {\n      return;\n    }\n\n    // Get lastmod value and format it properly\n    let lastmodValue = get(frontmatter, modifiedProperty) || lastmod;\n    if (lastmodValue instanceof Date) {\n      // Format date as YYYY-MM-DD to match old library behavior\n      lastmodValue = lastmodValue.toISOString().split(\"T\")[0];\n    } else if (\n      typeof lastmodValue === \"string\" &&\n      lastmodValue.includes(\"T\")\n    ) {\n      // Handle ISO string dates by extracting just the date part\n      lastmodValue = lastmodValue.split(\"T\")[0];\n    }\n\n    // Create the sitemap entry (reject keys with falsy values)\n    let entryChangefreq, entryPriority;\n    \n    if (auto) {\n      // Auto mode: calculate values, ignore global and frontmatter settings\n      entryChangefreq = calculateChangefreq(file, frontmatter, { modifiedProperty, lastmod });\n      entryPriority = calculatePriority(file, frontmatter, { modifiedProperty, lastmod });\n    } else {\n      // Manual mode: use global defaults, allow frontmatter overrides\n      entryChangefreq = frontmatter.changefreq || changefreq;\n      entryPriority = get(frontmatter, priorityProperty) || priority;\n    }\n\n    const entry = pick(\n      {\n        changefreq: entryChangefreq,\n        priority: entryPriority,\n        lastmod: lastmodValue,\n        links: linksOption ? get(frontmatter, linksOption) : undefined,\n      },\n      identity,\n    );\n\n    // Add the url (which is allowed to be falsy)\n    entry.url = buildUrl(file, frontmatter, { urlProperty, omitIndex, omitExtension });\n\n    // Add the entry to the links array\n    links.push(entry);\n  });\n\n  // Generate sitemap using the new sitemap library API\n  try {\n    const sitemap = new SitemapStream({\n      hostname,\n      xmlns: {\n        news: false,\n        xhtml: false,\n        image: false,\n        video: false,\n      },\n    });\n\n    // Write all URLs to the stream\n    links.forEach((link) => sitemap.write(link));\n\n    // End the stream\n    sitemap.end();\n\n    // Convert stream to string\n    const sitemapContent = await streamToPromise(sitemap);\n\n    // Add the sitemap file to the files object\n    files[output] = {\n      contents: sitemapContent,\n    };\n  } catch (error) {\n    throw new Error(`Failed to generate sitemap: ${error.message}`);\n  }\n}","/**\n * @fileoverview Robots.txt generation and coordination for Metalsmith SEO\n * Handles existing robots.txt files intelligently and generates basic ones when needed\n */\n\n/**\n * @typedef {Object} RobotsOptions\n * @property {string} hostname - Base hostname for sitemap URL\n * @property {string} [sitemapFile='sitemap.xml'] - Name of the sitemap file to reference\n * @property {boolean} [generateRobots=true] - Whether to generate robots.txt if none exists\n * @property {boolean} [addSitemapReference=true] - Whether to add sitemap reference to existing robots.txt\n * @property {Array<string>} [disallowPaths=[]] - Additional paths to disallow\n * @property {string} [userAgent='*'] - User agent for robots directives\n */\n\n/**\n * Processes robots.txt file - generates if missing, updates if needed\n * @param {Object} files - Metalsmith files object\n * @param {Object} metalsmith - Metalsmith instance\n * @param {RobotsOptions} options - Configuration options\n * @returns {Promise<void>}\n */\nexport async function processRobots(files, metalsmith, options) {\n  const {\n    hostname,\n    sitemapFile = 'sitemap.xml',\n    generateRobots = true,\n    addSitemapReference = true,\n    disallowPaths = [],\n    userAgent = '*'\n  } = options;\n\n  const robotsFile = 'robots.txt';\n  const existingRobots = files[robotsFile];\n  // Ensure hostname is a string\n  const hostnameStr = String(hostname || '');\n  const sitemapUrl = `${hostnameStr.replace(/\\/$/, '')}/${sitemapFile}`;\n\n  if (existingRobots) {\n    // Handle existing robots.txt file\n    if (addSitemapReference) {\n      const content = existingRobots.contents.toString();\n      \n      // Check if sitemap is already referenced\n      if (!content.includes('Sitemap:') && !content.includes('sitemap:')) {\n        // Add sitemap reference\n        const updatedContent = content.trim() + `\\n\\nSitemap: ${sitemapUrl}\\n`;\n        existingRobots.contents = Buffer.from(updatedContent);\n        \n        // Only log in non-test environments\n        const isTest = process.env.NODE_ENV === 'test' || process.env.METALSMITH_ENV === 'test';\n        if (!isTest) {\n          console.log('[metalsmith-seo] Added sitemap reference to existing robots.txt');\n        }\n      }\n    }\n  } else if (generateRobots) {\n    // Generate basic robots.txt file\n    const robotsContent = generateBasicRobots({\n      userAgent,\n      disallowPaths,\n      sitemapUrl\n    });\n\n    files[robotsFile] = {\n      contents: Buffer.from(robotsContent),\n      mode: '0644'\n    };\n\n    // Only log in non-test environments\n    const isTest = process.env.NODE_ENV === 'test' || process.env.METALSMITH_ENV === 'test';\n    if (!isTest) {\n      console.log('[metalsmith-seo] Generated robots.txt with sitemap reference');\n    }\n  }\n}\n\n/**\n * Generates basic robots.txt content\n * @param {Object} options - Generation options\n * @param {string} options.userAgent - User agent directive\n * @param {Array<string>} options.disallowPaths - Paths to disallow\n * @param {string} options.sitemapUrl - Full URL to sitemap\n * @returns {string} Robots.txt content\n */\nfunction generateBasicRobots({ userAgent, disallowPaths, sitemapUrl }) {\n  const lines = [];\n  \n  // User agent directive\n  lines.push(`User-agent: ${userAgent}`);\n  \n  // Disallow directives\n  if (disallowPaths.length > 0) {\n    disallowPaths.forEach(path => {\n      lines.push(`Disallow: ${path}`);\n    });\n  } else {\n    // Default: allow all\n    lines.push('Disallow:');\n  }\n  \n  // Empty line before sitemap\n  lines.push('');\n  \n  // Sitemap reference\n  lines.push(`Sitemap: ${sitemapUrl}`);\n  \n  return lines.join('\\n') + '\\n';\n}","/**\n * @fileoverview Comprehensive Metalsmith SEO plugin with head optimization, social media tags, and structured data.\n * @author Werner Glinka\n */\n\n/**\n * Dependencies\n */\nimport { batchOptimizeHeads } from \"./processors/head-optimizer.js\";\nimport { processSitemap } from \"./processors/sitemap.js\";\nimport { processRobots } from \"./processors/robots.js\";\n\n/**\n * Cache for site metadata checks to avoid repeated expensive operations\n * @type {Object}\n */\nlet siteMetadataCache = null;\n\n/**\n * Reset the site metadata cache - useful for testing or when switching projects\n * @returns {void}\n */\nfunction resetCache() {\n  siteMetadataCache = null;\n}\n\n/**\n * Get nested property from an object using dot notation path\n * @param {Object} obj - The object to query\n * @param {string} path - The path to the property (e.g., 'site' or 'data.site')\n * @returns {*} The value at the path, or undefined if not found\n */\nfunction getNestedProperty(obj, path) {\n  if (!path || !obj) return undefined;\n  \n  const parts = path.split('.');\n  let current = obj;\n  \n  for (const part of parts) {\n    if (current == null || typeof current !== 'object') {\n      return undefined;\n    }\n    current = current[part];\n  }\n  \n  return current;\n}\n\n/**\n * @typedef {Object} SeoOptions\n * @property {string} hostname - Base hostname for all URLs\n * @property {string} [seoProperty='seo'] - Frontmatter property containing SEO data\n * @property {string} [metadataPath='site'] - Path to site metadata in metalsmith.metadata() (e.g., 'site' or 'data.site')\n * @property {Object} [defaults] - Default values for missing metadata\n * @property {Object} [fallbacks] - Fallback property mappings\n * @property {Object} [social] - Social media configuration\n * @property {Object} [jsonLd] - JSON-LD structured data configuration\n * @property {Object} [sitemap] - Sitemap generation options\n * @property {Object} [robots] - Robots.txt generation options\n * @property {boolean} [enableSitemap=true] - Whether to generate sitemap.xml\n * @property {boolean} [enableRobots=true] - Whether to generate/update robots.txt\n * @property {number} [batchSize=10] - Number of files to process in parallel\n */\n\n/**\n * @typedef {Object} SocialConfig\n * @property {string} [siteName] - Site name for Open Graph\n * @property {string} [locale='en_US'] - Default locale\n * @property {string} [twitterSite] - Twitter site handle (@username)\n * @property {string} [twitterCreator] - Default Twitter creator handle\n * @property {string} [facebookAppId] - Facebook App ID\n * @property {string|Array<string>} [facebookAdmins] - Facebook admin IDs\n */\n\n/**\n * @typedef {Object} JsonLdConfig\n * @property {Object} [organization] - Organization schema data\n * @property {string} [searchUrl] - Search URL for WebSite schema\n * @property {Array<string>} [enableSchemas] - Schemas to auto-generate\n */\n\n/**\n * @typedef {Object} SitemapConfig\n * @property {string} [output='sitemap.xml'] - Sitemap output filename\n * @property {string} [pattern] - File pattern for sitemap inclusion (default: all HTML files)\n * @property {boolean} [omitIndex=false] - Omit index.html from URLs\n * @property {boolean} [omitExtension=false] - Omit file extensions\n * @property {boolean} [auto=false] - Auto-calculate priority and changefreq\n */\n\n/**\n * @typedef {Object} RobotsConfig\n * @property {boolean} [generateRobots=true] - Generate robots.txt if none exists\n * @property {boolean} [addSitemapReference=true] - Add sitemap reference to existing robots.txt\n * @property {Array<string>} [disallowPaths=[]] - Additional paths to disallow\n * @property {string} [userAgent='*'] - User agent for robots directives\n */\n\n/**\n * @typedef {Object} MetalsmithFiles\n * @description Object containing all files in the Metalsmith build, keyed by file path\n * @type {Object<string, {contents: Buffer} & FileMetadata>}\n */\n\n/**\n * @typedef {Object} MetalsmithInstance\n * @property {function(string, string): string[]} match - Match files against a glob pattern\n * @property {function} [metadata] - Get/set global metadata\n * @property {function} [source] - Get/set source directory\n * @property {function} [destination] - Get/set destination directory\n */\n\n/**\n * @typedef {function(Error=): void} MetalsmithCallback\n * @description Callback function to signal completion of plugin processing\n */\n\n/**\n * @typedef {function(MetalsmithFiles, MetalsmithInstance, MetalsmithCallback): void} MetalsmithPlugin\n * @description Function signature for Metalsmith plugins\n */\n\n/**\n * @typedef {string|SeoOptions} Options\n * @description Plugin configuration - can be a hostname string or full options object\n */\n\n/**\n * Creates a comprehensive Metalsmith SEO plugin.\n *\n * This plugin provides unified SEO optimization including:\n * - HTML head optimization with meta tags\n * - Open Graph tags for social media sharing\n * - Twitter Card tags\n * - JSON-LD structured data\n * - Sitemap.xml generation\n *\n * @param {Options} options - Plugin configuration options\n *   When passed as a string, it will be treated as the hostname.\n *   When passed as an object, it supports the full configuration.\n * @returns {import('metalsmith').Plugin} Configured plugin function\n * @throws {Error} When hostname is not provided or configuration is invalid\n *\n * @example\n * // Simple usage with hostname only\n * metalsmith.use(seo('https://example.com'))\n *\n * @example\n * // Using site metadata from data.site instead of site\n * metalsmith.use(seo({\n *   metadataPath: 'data.site'  // Will look for metadata().data.site.url, etc.\n * }))\n *\n * @example\n * // Advanced configuration\n * metalsmith.use(seo({\n *   hostname: 'https://example.com',\n *   defaults: {\n *     title: 'My Site',\n *     description: 'Default description',\n *     socialImage: '/images/default-og.jpg'\n *   },\n *   social: {\n *     siteName: 'My Site',\n *     twitterSite: '@mysite'\n *   },\n *   jsonLd: {\n *     organization: {\n *       name: 'My Company',\n *       logo: 'https://example.com/logo.png'\n *     }\n *   }\n * }))\n */\nfunction plugin(options = {}) {\n  let opts = options;\n\n  // Accept string option to specify the hostname\n  if (typeof opts === \"string\") {\n    opts = { hostname: opts };\n  }\n\n  // We'll merge with site metadata inside the plugin function\n  const pluginOptions = opts;\n\n  /**\n   * Main plugin function that processes files for comprehensive SEO optimization.\n   * @param {MetalsmithFiles} files - Object containing all files in the build\n   * @param {MetalsmithInstance} metalsmith - Metalsmith instance for accessing utilities\n   * @param {MetalsmithCallback} done - Callback to signal completion\n   * @returns {void}\n   */\n  return function (files, metalsmith, done) {\n    // Get the metadata path (default to 'site')\n    const metadataPath = pluginOptions.metadataPath || 'site';\n    \n    // Use cached site metadata check if available\n    let siteMetadata, hasSiteMetadata, deducedSiteName, deducedDescription;\n    \n    if (siteMetadataCache !== null) {\n      // Use cached values\n      siteMetadata = siteMetadataCache.siteMetadata;\n      hasSiteMetadata = siteMetadataCache.hasSiteMetadata;\n      deducedSiteName = siteMetadataCache.deducedSiteName;\n      deducedDescription = siteMetadataCache.deducedDescription;\n    } else {\n      // First run - check and cache\n      // Try to get site metadata from the configured path\n      siteMetadata = getNestedProperty(metalsmith.metadata(), metadataPath) || {};\n      hasSiteMetadata = Object.keys(siteMetadata).length > 0;\n      deducedSiteName = null;\n      deducedDescription = null;\n      \n      if (!hasSiteMetadata && !pluginOptions.defaults?.title) {\n        // Try to deduce site name from index file\n        const indexFile = files['index.html'] || files['index.md'];\n        if (indexFile && indexFile.title) {\n          deducedSiteName = indexFile.title;\n        }\n      }\n      \n      // Cache the results\n      siteMetadataCache = {\n        siteMetadata,\n        hasSiteMetadata,\n        deducedSiteName,\n        deducedDescription,\n        hasLoggedConfigSource: false\n      };\n    }\n    \n    // Merge configurations: deduced < site defaults < plugin options\n    const config = {\n      // Site-wide defaults from site.json or deduced\n      hostname: siteMetadata.url || pluginOptions.hostname,\n      defaults: {\n        title: pluginOptions.defaults?.title || siteMetadata.title || deducedSiteName,\n        description: pluginOptions.defaults?.description || siteMetadata.description || deducedDescription,\n        socialImage: pluginOptions.defaults?.socialImage || siteMetadata.socialImage || siteMetadata.defaultImage,\n        ...(pluginOptions.defaults || {})\n      },\n      social: {\n        siteName: pluginOptions.social?.siteName || siteMetadata.name || siteMetadata.title || deducedSiteName,\n        locale: pluginOptions.social?.locale || siteMetadata.locale || 'en_US',\n        twitterSite: pluginOptions.social?.twitterSite || siteMetadata.twitter,\n        facebookAppId: pluginOptions.social?.facebookAppId || siteMetadata.facebookAppId,\n        ...(siteMetadata.social || {}),\n        ...(pluginOptions.social || {})\n      },\n      jsonLd: {\n        organization: pluginOptions.jsonLd?.organization || siteMetadata.organization,\n        ...(siteMetadata.jsonLd || {}),\n        ...(pluginOptions.jsonLd || {})\n      },\n      \n      // Plugin-specific options (not typically in site.json)\n      seoProperty: pluginOptions.seoProperty || 'seo',\n      enableSitemap: pluginOptions.enableSitemap !== undefined ? pluginOptions.enableSitemap : true,\n      enableRobots: pluginOptions.enableRobots !== undefined ? pluginOptions.enableRobots : true,\n      batchSize: pluginOptions.batchSize || 10,\n      \n      // Fallback mappings\n      fallbacks: pluginOptions.fallbacks || {\n        title: 'title',\n        description: 'excerpt',\n        image: 'featured_image',\n        author: 'author'\n      },\n      \n      // Sitemap configuration\n      sitemap: {\n        ...(siteMetadata.sitemap || {}),\n        ...(pluginOptions.sitemap || {})\n      },\n      \n      // Robots.txt configuration\n      robots: {\n        ...(siteMetadata.robots || {}),\n        ...(pluginOptions.robots || {})\n      }\n    };\n    \n    // Add legacy sitemap options for compatibility (but don't override hostname!)\n    // Only copy specific legacy options, not everything\n    if (pluginOptions.changefreq !== undefined) config.changefreq = pluginOptions.changefreq;\n    if (pluginOptions.priority !== undefined) config.priority = pluginOptions.priority;\n    if (pluginOptions.lastmod !== undefined) config.lastmod = pluginOptions.lastmod;\n    if (pluginOptions.links !== undefined) config.links = pluginOptions.links;\n    if (pluginOptions.urlProperty !== undefined) config.urlProperty = pluginOptions.urlProperty;\n    if (pluginOptions.modifiedProperty !== undefined) config.modifiedProperty = pluginOptions.modifiedProperty;\n    if (pluginOptions.privateProperty !== undefined) config.privateProperty = pluginOptions.privateProperty;\n    if (pluginOptions.priorityProperty !== undefined) config.priorityProperty = pluginOptions.priorityProperty;\n    if (pluginOptions.output !== undefined) config.output = pluginOptions.output;\n    if (pluginOptions.pattern !== undefined) config.pattern = pluginOptions.pattern;\n    if (pluginOptions.omitIndex !== undefined) config.omitIndex = pluginOptions.omitIndex;\n    if (pluginOptions.omitExtension !== undefined) config.omitExtension = pluginOptions.omitExtension;\n    if (pluginOptions.auto !== undefined) config.auto = pluginOptions.auto;\n    \n    // Validate configuration\n    if (!config.hostname) {\n      const metadataHint = metadataPath === 'site' \n        ? 'site.url' \n        : `${metadataPath}.url`;\n      throw new Error(`[metalsmith-seo] hostname is required (set in plugin options or ${metadataHint} in metadata)`);\n    }\n    \n    // Provide helpful feedback about configuration source (only once and not in test environment)\n    const isTest = process.env.NODE_ENV === 'test' || process.env.METALSMITH_ENV === 'test';\n    \n    if (!isTest && siteMetadataCache && !siteMetadataCache.hasLoggedConfigSource) {\n      if (!hasSiteMetadata) {\n        console.log('[metalsmith-seo] No site metadata found. Using plugin defaults.');\n        if (deducedSiteName) {\n          console.log(`[metalsmith-seo] Deduced site name from index: \"${deducedSiteName}\"`);\n        }\n        console.log('[metalsmith-seo] Tip: Add a site.json to data/ folder for better SEO defaults.');\n      } else {\n        // Only log if we're using site metadata values\n        const usingSiteValues = [];\n        if (siteMetadata.url && !pluginOptions.hostname) usingSiteValues.push('hostname');\n        if (siteMetadata.title && !pluginOptions.defaults?.title) usingSiteValues.push('title');\n        if (siteMetadata.description && !pluginOptions.defaults?.description) usingSiteValues.push('description');\n        \n        if (usingSiteValues.length > 0) {\n          console.log(`[metalsmith-seo] Using site.json for: ${usingSiteValues.join(', ')}`);\n        }\n      }\n      \n      // Mark that we've logged the config source\n      siteMetadataCache.hasLoggedConfigSource = true;\n    }\n    \n    // Always optimize heads - that's the point of an SEO plugin!\n    const headOptimization = batchOptimizeHeads(files, {\n      hostname: config.hostname,\n      seoProperty: config.seoProperty,\n      defaults: config.defaults,\n      fallbacks: config.fallbacks,\n      social: config.social,\n      jsonLd: config.jsonLd,\n      batchSize: config.batchSize\n    });\n\n    // Sitemap generation (if enabled)\n    let sitemapGeneration = Promise.resolve();\n    if (config.enableSitemap) {\n      // Merge sitemap-specific options\n      const sitemapOptions = {\n        hostname: config.hostname,\n        output: config.sitemap?.output || config.output || 'sitemap.xml',\n        pattern: config.sitemap?.pattern || config.pattern || '**/*.html',\n        omitIndex: config.sitemap?.omitIndex !== undefined ? config.sitemap.omitIndex : (config.omitIndex || false),\n        omitExtension: config.sitemap?.omitExtension !== undefined ? config.sitemap.omitExtension : (config.omitExtension || false),\n        auto: config.sitemap?.auto !== undefined ? config.sitemap.auto : (config.auto !== undefined ? config.auto : true),\n        // Legacy options support\n        changefreq: config.changefreq,\n        priority: config.priority,\n        lastmod: config.lastmod,\n        links: config.links,\n        urlProperty: config.urlProperty || 'canonical',\n        modifiedProperty: config.modifiedProperty || 'lastmod',\n        privateProperty: config.privateProperty || 'private',\n        priorityProperty: config.priorityProperty || 'priority'\n      };\n\n      sitemapGeneration = processSitemap(files, metalsmith, sitemapOptions);\n    }\n\n    // Execute head optimization and sitemap in parallel\n    Promise.all([headOptimization, sitemapGeneration])\n      .then(() => {\n        // Robots.txt generation/update (if enabled) - after sitemap is done\n        if (config.enableRobots) {\n          const robotsOptions = {\n            hostname: config.hostname,\n            sitemapFile: config.sitemap?.output || config.output || 'sitemap.xml',\n            generateRobots: config.robots?.generateRobots !== undefined ? config.robots.generateRobots : true,\n            addSitemapReference: config.robots?.addSitemapReference !== undefined ? config.robots.addSitemapReference : true,\n            disallowPaths: config.robots?.disallowPaths || [],\n            userAgent: config.robots?.userAgent || '*'\n          };\n\n          return processRobots(files, metalsmith, robotsOptions);\n        }\n      })\n      .then(() => done())\n      .catch(done);\n  };\n}\n\n// Set function name for better debugging\nObject.defineProperty(plugin, 'name', { value: 'metalsmith-seo' });\n\n/**\n * Metalsmith plugin factory function.\n * @type {function(Options): import('metalsmith').Plugin}\n * @default\n */\nexport default plugin;"],"names":["get","obj","pathStr","defaultValue","keys","split","result","key","_result","undefined","pick","predicate","value","Object","entries","identity","extractMetadata","filePath","frontmatter","options","hostname","seoProperty","defaults","fallbacks","hostnameStr","String","seoData","metadata","title","extractTitle","description","extractDescription","image","extractImage","canonicalURL","extractCanonicalURL","robots","extractRobots","noIndex","extractNoIndex","type","extractContentType","publishDate","extractPublishDate","modifiedDate","extractModifiedDate","author","extractAuthor","keywords","extractKeywords","wordCount","extractWordCount","readingTime","calculateReadingTime","autoGenerateDescription","contents","socialImage","startsWith","replace","cleanPath","Boolean","date","tags","price","sku","address","phone","normalizeDate","Array","isArray","map","k","trim","Buffer","isBuffer","content","toString","words","filter","word","length","wordsPerMinute","minutes","Math","ceil","maxLength","truncated","substring","lastSentence","lastIndexOf","lastSpace","Date","toISOString","parsed","isNaN","getTime","generateMetaTags","siteConfig","metaTags","linkTags","push","name","join","generateRobotsDirective","rel","href","themeColor","addTechnicalMetaTags","defaultRobots","language","httpEquiv","publisher","copyright","googlebotDirectives","maxSnippet","maxImagePreview","maxVideoPreview","addArticleMetaTags","forEach","keyword","generateOpenGraphTags","addCoreOpenGraphTags","addArticleOpenGraphTags","addProductOpenGraphTags","addProfileOpenGraphTags","addSiteOpenGraphTags","property","ogType","mapContentTypeToOGType","addImageMetadata","siteName","locale","defaultWidth","ogImageWidth","defaultHeight","ogImageHeight","imageAlt","imageType","getImageType","section","tag","brand","availability","condition","currency","firstName","lastName","username","facebookAppId","facebookAdmins","admins","admin","contentType","typeMap","imageUrl","_imageUrl$split$pop","extension","pop","toLowerCase","generateTwitterCardTags","cardType","determineCardType","addCoreTwitterTags","addSummaryLargeImageTags","addSummaryTags","addAppTags","addPlayerTags","twitterCard","twitterCardType","videoUrl","appId","twitterSite","ensureTwitterHandle","creator","twitterCreator","twitterTitle","truncateTitle","twitterDescription","truncateDescription","iosAppId","iosAppUrl","androidAppId","androidAppUrl","appName","videoWidth","videoHeight","videoStreamUrl","handle","cleaned","generateJsonLd","schemas","generateWebSiteSchema","generateContentSchema","generateBreadcrumbSchema","generateOrganizationSchema","jsonLdSchemas","schema","html","generateJsonLdHtml","webSiteSchema","url","searchUrl","potentialAction","alternateNames","alternateName","generateArticleSchema","generateProductSchema","generateLocalBusinessSchema","generateWebPageSchema","articleSchema","datePublished","dateModified","organization","generatePublisherSchema","articleSection","timeRequired","productSchema","offers","rating","aggregateRating","ratingCount","businessSchema","businessName","streetAddress","city","state","postalCode","country","latitude","longitude","geo","telephone","email","openingHours","webPageSchema","isPartOf","pathSegments","segment","breadcrumbItems","currentPath","index","l","toUpperCase","breadcrumbSchema","org","organizationSchema","logo","sameAs","contactPoint","contactType","jsonLd","context","rest","jsonString","JSON","stringify","updateTitle","$","load","decodeEntities","lowerCaseAttributeNames","$head","before","$title","find","text","prepend","escapeHtml","updateMetaTag","selector","$existing","attr","metaTag","$lastMeta","last","after","updateLinkTag","attributes","attrs","linkTag","replaceWith","$lastLink","append","addScript","scriptContent","position","scriptTag","str","removeExistingMetaTags","defaultTags","ogTags","twitterTags","tagsToRemove","remove","optimizeHead","social","cleanExisting","generateSitemap","isHtmlFile","generated","generateAllSeoContent","injectSeoContent","config","metaResult","ogResult","twitterResult","jsonLdResult","meta","openGraph","twitter","modifiedHtml","criticalMetaTags","getCriticalMetaTags","otherMetaTags","getOtherMetaTags","link","fromEntries","includes","jsonLdContent","criticalTags","test","batchOptimizeHeads","files","results","fileList","batchSize","i","batch","slice","batchPromises","from","seoMetadata","error","console","batchResults","Promise","all","checkFile","file","metalsmith","pattern","privateProperty","matchResult","match","buildUrl","urlProperty","omitIndex","omitExtension","canonicalUrl","indexFile","path","basename","replaceBackslash","extname","calculatePriority","modifiedProperty","lastmod","calculatedPriority","pathDepth","sep","lowerFile","fileLastmod","modDate","now","daysSinceModified","contentLength","min","max","calculateChangefreq","processSitemap","auto","changefreq","links","linksOption","output","priority","priorityProperty","sortedFiles","sort","a","b","aDepth","bDepth","localeCompare","lastmodValue","entryChangefreq","entryPriority","entry","sitemap","SitemapStream","xmlns","news","xhtml","video","write","end","sitemapContent","streamToPromise","Error","message","processRobots","sitemapFile","generateRobots","addSitemapReference","disallowPaths","userAgent","robotsFile","existingRobots","sitemapUrl","updatedContent","isTest","process","env","NODE_ENV","METALSMITH_ENV","log","robotsContent","generateBasicRobots","mode","lines","siteMetadataCache","getNestedProperty","parts","current","part","plugin","opts","pluginOptions","done","_pluginOptions$defaul2","_pluginOptions$defaul3","_pluginOptions$defaul4","_pluginOptions$social","_pluginOptions$social2","_pluginOptions$social3","_pluginOptions$social4","_pluginOptions$jsonLd","metadataPath","siteMetadata","hasSiteMetadata","deducedSiteName","deducedDescription","_pluginOptions$defaul","hasLoggedConfigSource","defaultImage","enableSitemap","enableRobots","metadataHint","_pluginOptions$defaul5","_pluginOptions$defaul6","usingSiteValues","headOptimization","sitemapGeneration","resolve","_config$sitemap","_config$sitemap2","_config$sitemap3","_config$sitemap4","_config$sitemap5","sitemapOptions","then","_config$sitemap6","_config$robots","_config$robots2","_config$robots3","_config$robots4","robotsOptions","catch","defineProperty"],"mappings":"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"}